|alu
sko <= mealy_state_machine:inst2.sko
clk => mealy_state_machine:inst2.clk
clk => block_oper:inst.clk
set => mealy_state_machine:inst2.set
cop => mealy_state_machine:inst2.cop
sno => mealy_state_machine:inst2.sno
f3 <= block_oper:inst.f3
a[1] => block_oper:inst.a[1]
a[2] => block_oper:inst.a[2]
a[3] => block_oper:inst.a[3]
a[4] => block_oper:inst.a[4]
b[1] => block_oper:inst.b[1]
b[2] => block_oper:inst.b[2]
b[3] => block_oper:inst.b[3]
b[4] => block_oper:inst.b[4]
f2 <= block_oper:inst.f2
f1 <= block_oper:inst.f1
incr_i <= mealy_state_machine:inst2.incr_i
ks1_res[1] <= block_oper:inst.ks1_res[1]
ks1_res[2] <= block_oper:inst.ks1_res[2]
ks1_res[3] <= block_oper:inst.ks1_res[3]
ks1_res[4] <= block_oper:inst.ks1_res[4]
ks1_res[5] <= block_oper:inst.ks1_res[5]
ks1_res[6] <= block_oper:inst.ks1_res[6]
ks1_res[7] <= block_oper:inst.ks1_res[7]
ks1_res[8] <= block_oper:inst.ks1_res[8]
n[1] <= block_oper:inst.n[1]
n[2] <= block_oper:inst.n[2]
n[3] <= block_oper:inst.n[3]
n[4] <= block_oper:inst.n[4]
n[5] <= block_oper:inst.n[5]
n[6] <= block_oper:inst.n[6]
n[7] <= block_oper:inst.n[7]
n[8] <= block_oper:inst.n[8]
next_state_out[0] <= mealy_state_machine:inst2.next_state_out[0]
next_state_out[1] <= mealy_state_machine:inst2.next_state_out[1]
priznak[0] <= block_oper:inst.priznak[0]
priznak[1] <= block_oper:inst.priznak[1]
rb[1] <= block_oper:inst.rb[1]
rb[2] <= block_oper:inst.rb[2]
rb[3] <= block_oper:inst.rb[3]
rb[4] <= block_oper:inst.rb[4]
s[1] <= block_oper:inst.s[1]
s[2] <= block_oper:inst.s[2]
s[3] <= block_oper:inst.s[3]
s[4] <= block_oper:inst.s[4]
s[5] <= block_oper:inst.s[5]
s[6] <= block_oper:inst.s[6]
s[7] <= block_oper:inst.s[7]
s[8] <= block_oper:inst.s[8]
s_out[0] <= mealy_state_machine:inst2.s_out[0]
s_out[1] <= mealy_state_machine:inst2.s_out[1]
y[1] <= mealy_state_machine:inst2.y[1]
y[2] <= mealy_state_machine:inst2.y[2]
y[3] <= mealy_state_machine:inst2.y[3]
y[4] <= mealy_state_machine:inst2.y[4]
y[5] <= mealy_state_machine:inst2.y[5]
y[6] <= mealy_state_machine:inst2.y[6]
y[7] <= mealy_state_machine:inst2.y[7]
y[8] <= mealy_state_machine:inst2.y[8]
y[9] <= mealy_state_machine:inst2.y[9]
y[10] <= mealy_state_machine:inst2.y[10]


|alu|mealy_state_machine:inst2
clk => i[0].CLK
clk => i[1].CLK
clk => state~1.DATAIN
set => state~3.DATAIN
x[0] => Equal0.IN1
x[0] => Equal1.IN0
x[1] => Equal0.IN0
x[1] => Equal1.IN1
x[2] => ~NO_FANOUT~
cop => ~NO_FANOUT~
sno => Selector1.IN2
sno => Selector2.IN2
sno => y.DATAB
sno => Selector3.IN2
sno => Selector4.IN2
sno => y.DATAB
sno => y.DATAB
sno => i[0].PRESET
sno => i[1].ACLR
sno => Selector0.IN1
sko <= sko.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= Selector4.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y[6].DB_MAX_OUTPUT_PORT_TYPE
y[7] <= Selector3.DB_MAX_OUTPUT_PORT_TYPE
y[8] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[9] <= Selector2.DB_MAX_OUTPUT_PORT_TYPE
y[10] <= <GND>
incr_i <= incr_i.DB_MAX_OUTPUT_PORT_TYPE
s_out[0] <= s_out.DB_MAX_OUTPUT_PORT_TYPE
s_out[1] <= s_out.DB_MAX_OUTPUT_PORT_TYPE
next_state_out[0] <= next_state_out.DB_MAX_OUTPUT_PORT_TYPE
next_state_out[1] <= next_state_out.DB_MAX_OUTPUT_PORT_TYPE


|alu|block_oper:inst
f3 <= KC3:inst14.f3
clk => KC3:inst14.clk
clk => RR:inst11.clk
clk => RA:inst1.clk
clk => LPM_SHIFTREG:inst6.clock
y[1] => RA:inst1.ce
y[2] => LPM_SHIFTREG:inst6.load
y[3] => LPM_SHIFTREG:inst6.enable
y[4] => KC1:inst.y[1]
y[5] => KC1:inst.y[0]
y[6] => RR:inst11.l
y[7] => RR:inst11.ce
y[8] => RR:inst11.r
y[9] => KC2:inst7.s
y[10] => KC3:inst14.ce
n[1] <= RR:inst11.q[1]
n[2] <= RR:inst11.q[2]
n[3] <= RR:inst11.q[3]
n[4] <= RR:inst11.q[4]
n[5] <= RR:inst11.q[5]
n[6] <= RR:inst11.q[6]
n[7] <= RR:inst11.q[7]
n[8] <= RR:inst11.q[8]
a[1] => RA:inst1.a[1]
a[2] => RA:inst1.a[2]
a[3] => RA:inst1.a[3]
a[4] => RA:inst1.a[4]
rb[1] <= LPM_SHIFTREG:inst6.q[0]
rb[2] <= LPM_SHIFTREG:inst6.q[1]
rb[3] <= LPM_SHIFTREG:inst6.q[2]
rb[4] <= LPM_SHIFTREG:inst6.q[3]
b[1] => LPM_SHIFTREG:inst6.data[0]
b[2] => LPM_SHIFTREG:inst6.data[1]
b[3] => LPM_SHIFTREG:inst6.data[2]
b[4] => LPM_SHIFTREG:inst6.data[3]
f1 <= LPM_SHIFTREG:inst6.shiftout
f2 <= LPM_SHIFTREG:inst6.q[2]
ks1_res[1] <= KC1:inst.d[1]
ks1_res[2] <= KC1:inst.d[2]
ks1_res[3] <= KC1:inst.d[3]
ks1_res[4] <= KC1:inst.d[4]
ks1_res[5] <= KC1:inst.d[5]
ks1_res[6] <= KC1:inst.d[6]
ks1_res[7] <= KC1:inst.d[7]
ks1_res[8] <= KC1:inst.d[8]
priznak[0] <= KC3:inst14.d[0]
priznak[1] <= KC3:inst14.d[1]
s[1] <= summator:inst8.s[1]
s[2] <= summator:inst8.s[2]
s[3] <= summator:inst8.s[3]
s[4] <= summator:inst8.s[4]
s[5] <= summator:inst8.s[5]
s[6] <= summator:inst8.s[6]
s[7] <= summator:inst8.s[7]
s[8] <= summator:inst8.s[8]


|alu|block_oper:inst|KC3:inst14
a[0] => LessThan0.IN10
a[0] => LessThan1.IN10
a[0] => Equal0.IN4
a[0] => Equal1.IN4
a[1] => LessThan0.IN9
a[1] => LessThan1.IN9
a[1] => Equal0.IN3
a[1] => Equal1.IN3
a[2] => LessThan0.IN8
a[2] => LessThan1.IN8
a[2] => Equal0.IN2
a[2] => Equal1.IN2
a[3] => LessThan0.IN7
a[3] => LessThan1.IN7
a[3] => Equal0.IN1
a[3] => Equal1.IN1
a[4] => LessThan0.IN6
a[4] => LessThan1.IN6
a[4] => Equal0.IN0
a[4] => Equal1.IN0
clk => d[0]~reg0.CLK
clk => d[1]~reg0.CLK
ce => d[1]~reg0.ENA
ce => d[0]~reg0.ENA
f3 <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
d[0] <= d[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d[1] <= d[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|alu|block_oper:inst|RR:inst11
d[1] => state.DATAB
d[2] => state.DATAB
d[3] => state.DATAB
d[4] => state.DATAB
d[5] => state.DATAB
d[6] => state.DATAB
d[7] => state.DATAB
d[8] => state.DATAB
l => state.OUTPUTSELECT
l => state.OUTPUTSELECT
l => state.OUTPUTSELECT
l => state.OUTPUTSELECT
l => state.OUTPUTSELECT
l => state.OUTPUTSELECT
l => state.OUTPUTSELECT
l => state.OUTPUTSELECT
ce => state.OUTPUTSELECT
ce => state.OUTPUTSELECT
ce => state.OUTPUTSELECT
ce => state.OUTPUTSELECT
ce => state.OUTPUTSELECT
ce => state.OUTPUTSELECT
ce => state.OUTPUTSELECT
ce => state.OUTPUTSELECT
clk => state[1].CLK
clk => state[2].CLK
clk => state[3].CLK
clk => state[4].CLK
clk => state[5].CLK
clk => state[6].CLK
clk => state[7].CLK
clk => state[8].CLK
r => state.OUTPUTSELECT
r => state.OUTPUTSELECT
r => state.OUTPUTSELECT
r => state.OUTPUTSELECT
r => state.OUTPUTSELECT
r => state.OUTPUTSELECT
r => state.OUTPUTSELECT
r => state.OUTPUTSELECT
q[1] <= state[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= state[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= state[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= state[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= state[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= state[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= state[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= state[8].DB_MAX_OUTPUT_PORT_TYPE


|alu|block_oper:inst|summator:inst8
a[1] => Add0.IN8
a[2] => Add0.IN7
a[3] => Add0.IN6
a[4] => Add0.IN5
a[5] => Add0.IN4
a[6] => Add0.IN3
a[7] => Add0.IN2
a[8] => Add0.IN1
b[1] => Add0.IN16
b[2] => Add0.IN15
b[3] => Add0.IN14
b[4] => Add0.IN13
b[5] => Add0.IN12
b[6] => Add0.IN11
b[7] => Add0.IN10
b[8] => Add0.IN9
s[1] <= sum.DB_MAX_OUTPUT_PORT_TYPE
s[2] <= sum.DB_MAX_OUTPUT_PORT_TYPE
s[3] <= sum.DB_MAX_OUTPUT_PORT_TYPE
s[4] <= sum.DB_MAX_OUTPUT_PORT_TYPE
s[5] <= sum.DB_MAX_OUTPUT_PORT_TYPE
s[6] <= sum.DB_MAX_OUTPUT_PORT_TYPE
s[7] <= sum.DB_MAX_OUTPUT_PORT_TYPE
s[8] <= sum.DB_MAX_OUTPUT_PORT_TYPE


|alu|block_oper:inst|KC1:inst
a[1] => Mux7.IN3
a[1] => Mux7.IN2
a[2] => Mux6.IN3
a[2] => Mux6.IN2
a[3] => Mux5.IN3
a[3] => Mux5.IN2
a[4] => Mux0.IN3
a[4] => Mux1.IN3
a[4] => Mux2.IN3
a[4] => Mux3.IN3
a[4] => Mux4.IN3
a[4] => Mux0.IN2
a[4] => Mux1.IN2
a[4] => Mux2.IN2
a[4] => Mux3.IN2
a[4] => Mux4.IN2
y[0] => Mux0.IN5
y[0] => Mux1.IN5
y[0] => Mux2.IN5
y[0] => Mux3.IN5
y[0] => Mux4.IN5
y[0] => Mux5.IN5
y[0] => Mux6.IN5
y[0] => Mux7.IN5
y[1] => Mux0.IN4
y[1] => Mux1.IN4
y[1] => Mux2.IN4
y[1] => Mux3.IN4
y[1] => Mux4.IN4
y[1] => Mux5.IN4
y[1] => Mux6.IN4
y[1] => Mux7.IN4
d[1] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
d[2] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
d[3] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
d[4] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
d[5] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
d[6] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
d[7] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
d[8] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|alu|block_oper:inst|RA:inst1
a[1] => d[1]~reg0.DATAIN
a[2] => d[2]~reg0.DATAIN
a[3] => d[3]~reg0.DATAIN
a[4] => d[4]~reg0.DATAIN
d[1] <= d[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d[2] <= d[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d[3] <= d[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d[4] <= d[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ce => d[1]~reg0.ENA
ce => d[2]~reg0.ENA
ce => d[3]~reg0.ENA
ce => d[4]~reg0.ENA
clk => d[1]~reg0.CLK
clk => d[2]~reg0.CLK
clk => d[3]~reg0.CLK
clk => d[4]~reg0.CLK


|alu|block_oper:inst|KC2:inst7
b[1] => q.DATAA
b[2] => q.DATAA
b[3] => q.DATAA
b[4] => q.DATAA
b[4] => q.DATAA
b[4] => q.DATAA
b[4] => q.DATAA
b[4] => q.DATAA
a[1] => q.DATAB
a[2] => q.DATAB
a[3] => q.DATAB
a[4] => q.DATAB
a[5] => q.DATAB
a[6] => q.DATAB
a[7] => q.DATAB
a[8] => q.DATAB
q[1] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[8] <= q.DB_MAX_OUTPUT_PORT_TYPE
s => q.OUTPUTSELECT
s => q.OUTPUTSELECT
s => q.OUTPUTSELECT
s => q.OUTPUTSELECT
s => q.OUTPUTSELECT
s => q.OUTPUTSELECT
s => q.OUTPUTSELECT
s => q.OUTPUTSELECT


|alu|block_oper:inst|LPM_SHIFTREG:inst6
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
q[0] <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffs[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffs[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= dffs[3].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= dffs[3].DB_MAX_OUTPUT_PORT_TYPE


