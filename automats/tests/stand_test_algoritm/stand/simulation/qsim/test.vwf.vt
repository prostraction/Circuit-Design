// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "12/18/2018 19:38:10"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    Block1
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Block1_vlg_sample_tst(
	clk,
	mode,
	reset,
	start,
	sampler_tx
);
input  clk;
input [2:0] mode;
input  reset;
input  start;
output sampler_tx;

reg sample;
time current_time;
always @(clk or mode or reset or start)
                                                                                
begin                                                 
 if ($realtime > 0)                                   
 begin                                                
	if ($realtime == 0 || $realtime != current_time)  
	begin									          
		if (sample === 1'bx)                          
			sample = 0;                               
		else                                          
			sample = ~sample;                         
	end										          
	current_time = $realtime;					      
 end                                                  
end                                                   

assign sampler_tx = sample;
endmodule

module Block1_vlg_check_tst (
	enable,
	rez,
	x,
	y,
	z,
	sampler_rx
);
input  enable;
input [7:0] rez;
input [3:0] x;
input [3:0] y;
input [7:0] z;
input sampler_rx;

reg  enable_expected;
reg [7:0] rez_expected;
reg [3:0] x_expected;
reg [3:0] y_expected;
reg [7:0] z_expected;

reg  enable_prev;
reg [7:0] rez_prev;
reg [3:0] x_prev;
reg [3:0] y_prev;
reg [7:0] z_prev;

reg  enable_expected_prev;
reg [7:0] rez_expected_prev;
reg [3:0] x_expected_prev;
reg [3:0] y_expected_prev;
reg [7:0] z_expected_prev;

reg  last_enable_exp;
reg [7:0] last_rez_exp;
reg [3:0] last_x_exp;
reg [3:0] last_y_exp;
reg [7:0] last_z_exp;

reg trigger;

integer i;
integer nummismatches;

reg [1:5] on_first_change ;


initial
begin
trigger = 0;
i = 0;
nummismatches = 0;
on_first_change = 5'b1;
end

// update real /o prevs

always @(trigger)
begin
	enable_prev = enable;
	rez_prev = rez;
	x_prev = x;
	y_prev = y;
	z_prev = z;
end

// update expected /o prevs

always @(trigger)
begin
	enable_expected_prev = enable_expected;
	rez_expected_prev = rez_expected;
	x_expected_prev = x_expected;
	y_expected_prev = y_expected;
	z_expected_prev = z_expected;
end



// expected enable
initial
begin
	enable_expected = 1'bX;
end 
// expected rez[ 7 ]
initial
begin
	rez_expected[7] = 1'bX;
end 
// expected rez[ 6 ]
initial
begin
	rez_expected[6] = 1'bX;
end 
// expected rez[ 5 ]
initial
begin
	rez_expected[5] = 1'bX;
end 
// expected rez[ 4 ]
initial
begin
	rez_expected[4] = 1'bX;
end 
// expected rez[ 3 ]
initial
begin
	rez_expected[3] = 1'bX;
end 
// expected rez[ 2 ]
initial
begin
	rez_expected[2] = 1'bX;
end 
// expected rez[ 1 ]
initial
begin
	rez_expected[1] = 1'bX;
end 
// expected rez[ 0 ]
initial
begin
	rez_expected[0] = 1'bX;
end 
// expected x[ 3 ]
initial
begin
	x_expected[3] = 1'b1;
	x_expected[3] = #6852 1'b0;
	x_expected[3] = #10200 1'b1;
	x_expected[3] = #3913 1'b0;
	x_expected[3] = #8200 1'b1;
	x_expected[3] = #10835 1'b0;
	x_expected[3] = #4711 1'b1;
	x_expected[3] = #3200 1'b0;
	x_expected[3] = #6800 1'b1;
	x_expected[3] = #3200 1'b0;
	x_expected[3] = #4599 1'b1;
	x_expected[3] = #2250 1'b0;
	x_expected[3] = #2750 1'b1;
	x_expected[3] = #2250 1'b0;
	x_expected[3] = #732 1'b1;
	x_expected[3] = #2150 1'b0;
	x_expected[3] = #2850 1'b1;
	x_expected[3] = #2150 1'b0;
	x_expected[3] = #2931 1'b1;
	x_expected[3] = #2100 1'b0;
	x_expected[3] = #2900 1'b1;
	x_expected[3] = #2100 1'b0;
	x_expected[3] = #2327 1'b1;
	x_expected[3] = #1868 1'b0;
	x_expected[3] = #3000 1'b1;
	x_expected[3] = #2000 1'b0;
	x_expected[3] = #3000 1'b1;
	x_expected[3] = #579 1'b0;
	x_expected[3] = #5900 1'b1;
	x_expected[3] = #7813 1'b0;
	x_expected[3] = #5400 1'b1;
	x_expected[3] = #1345 1'b0;
	x_expected[3] = #2850 1'b1;
	x_expected[3] = #2150 1'b0;
	x_expected[3] = #2850 1'b1;
	x_expected[3] = #1245 1'b0;
	x_expected[3] = #1600 1'b1;
	# 2533;
	repeat(2)
	begin
		x_expected[3] = 1'b0;
		x_expected[3] = #4133 1'b1;
		# 2533;
	end
	x_expected[3] = 1'b0;
	x_expected[3] = #2535 1'b1;
	x_expected[3] = #1822 1'b0;
	x_expected[3] = #5000 1'b1;
	x_expected[3] = #5000 1'b0;
	x_expected[3] = #5000 1'b1;
	x_expected[3] = #5993 1'b0;
	x_expected[3] = #5500 1'b1;
	x_expected[3] = #4500 1'b0;
	x_expected[3] = #5500 1'b1;
	x_expected[3] = #1685 1'b0;
	x_expected[3] = #9014 1'b1;
	x_expected[3] = #7600 1'b0;
	x_expected[3] = #13118 1'b1;
	x_expected[3] = #8800 1'b0;
	x_expected[3] = #1991 1'b1;
	x_expected[3] = #5500 1'b0;
	x_expected[3] = #3977 1'b1;
	x_expected[3] = #6112 1'b0;
	x_expected[3] = #10600 1'b1;
	x_expected[3] = #4667 1'b0;
	x_expected[3] = #4000 1'b1;
	x_expected[3] = #2666 1'b0;
	x_expected[3] = #4000 1'b1;
	x_expected[3] = #2666 1'b0;
	x_expected[3] = #4000 1'b1;
	x_expected[3] = #1289 1'b0;
	x_expected[3] = #3552 1'b1;
	# 2933;
	repeat(2)
	begin
		x_expected[3] = 1'b0;
		x_expected[3] = #3733 1'b1;
		# 2933;
	end
	x_expected[3] = 1'b0;
	x_expected[3] = #183 1'b1;
	x_expected[3] = #10627 1'b0;
	x_expected[3] = #8000 1'b1;
	x_expected[3] = #2078 1'b0;
	x_expected[3] = #4467 1'b1;
	x_expected[3] = #2199 1'b0;
	x_expected[3] = #4467 1'b1;
	x_expected[3] = #2199 1'b0;
	x_expected[3] = #4467 1'b1;
	x_expected[3] = #1496 1'b0;
	x_expected[3] = #377 1'b1;
	x_expected[3] = #1650 1'b0;
	x_expected[3] = #3350 1'b1;
	x_expected[3] = #1650 1'b0;
	x_expected[3] = #2973 1'b1;
	# 569;
	repeat(2)
	begin
		x_expected[3] = 1'b0;
		x_expected[3] = #1900 1'b1;
		# 1433;
	end
	x_expected[3] = 1'b0;
	x_expected[3] = #1900 1'b1;
	x_expected[3] = #865 1'b0;
	x_expected[3] = #2411 1'b1;
	x_expected[3] = #4800 1'b0;
	x_expected[3] = #6528 1'b1;
	x_expected[3] = #6000 1'b0;
	x_expected[3] = #261 1'b1;
	# 883;
	repeat(2)
	begin
		x_expected[3] = 1'b0;
		x_expected[3] = #1434 1'b1;
		# 1899;
	end
	x_expected[3] = 1'b0;
	x_expected[3] = #1434 1'b1;
	x_expected[3] = #2972 1'b0;
	x_expected[3] = #2550 1'b1;
	x_expected[3] = #2450 1'b0;
	x_expected[3] = #2550 1'b1;
	x_expected[3] = #495 1'b0;
	x_expected[3] = #2619 1'b1;
	x_expected[3] = #3900 1'b0;
	x_expected[3] = #6100 1'b1;
	x_expected[3] = #3900 1'b0;
	x_expected[3] = #3481 1'b1;
	# 906;
	repeat(2)
	begin
		x_expected[3] = 1'b0;
		x_expected[3] = #1800 1'b1;
		# 1533;
	end
	x_expected[3] = 1'b0;
	x_expected[3] = #1800 1'b1;
	x_expected[3] = #628 1'b0;
	x_expected[3] = #3866 1'b1;
	x_expected[3] = #5400 1'b0;
	x_expected[3] = #4600 1'b1;
	x_expected[3] = #5400 1'b0;
	x_expected[3] = #1363 1'b1;
	# 1066;
	repeat(2)
	begin
		x_expected[3] = 1'b0;
		x_expected[3] = #2267 1'b1;
		# 1066;
	end
	x_expected[3] = 1'b0;
	x_expected[3] = #1639 1'b1;
	x_expected[3] = #1489 1'b0;
	x_expected[3] = #5000 1'b1;
	x_expected[3] = #6242 1'b0;
	x_expected[3] = #8200 1'b1;
	x_expected[3] = #9589 1'b0;
	x_expected[3] = #2000 1'b1;
	x_expected[3] = #3000 1'b0;
	x_expected[3] = #2000 1'b1;
	x_expected[3] = #4562 1'b0;
	x_expected[3] = #5700 1'b1;
	x_expected[3] = #4300 1'b0;
	x_expected[3] = #5700 1'b1;
	x_expected[3] = #2218 1'b0;
	x_expected[3] = #6549 1'b1;
	x_expected[3] = #3100 1'b0;
	x_expected[3] = #1675 1'b1;
	x_expected[3] = #6800 1'b0;
	x_expected[3] = #11876 1'b1;
	x_expected[3] = #185 1'b0;
	x_expected[3] = #6100 1'b1;
	x_expected[3] = #3900 1'b0;
	x_expected[3] = #6100 1'b1;
	x_expected[3] = #6118 1'b0;
	x_expected[3] = #2667 1'b1;
	x_expected[3] = #3999 1'b0;
	x_expected[3] = #2667 1'b1;
	x_expected[3] = #3999 1'b0;
	x_expected[3] = #2667 1'b1;
	x_expected[3] = #1598 1'b0;
	x_expected[3] = #1745 1'b1;
	x_expected[3] = #4400 1'b0;
	x_expected[3] = #5600 1'b1;
	x_expected[3] = #4400 1'b0;
	x_expected[3] = #10445 1'b1;
	x_expected[3] = #3000 1'b0;
	x_expected[3] = #7000 1'b1;
	x_expected[3] = #3000 1'b0;
	x_expected[3] = #410 1'b1;
	x_expected[3] = #671 1'b0;
	x_expected[3] = #3100 1'b1;
	x_expected[3] = #1900 1'b0;
	x_expected[3] = #3100 1'b1;
	x_expected[3] = #1229 1'b0;
	x_expected[3] = #5688 1'b1;
	x_expected[3] = #6200 1'b0;
	x_expected[3] = #11818 1'b1;
	x_expected[3] = #5200 1'b0;
	x_expected[3] = #3693 1'b1;
	# 2933;
	repeat(2)
	begin
		x_expected[3] = 1'b0;
		x_expected[3] = #3733 1'b1;
		# 2933;
	end
	x_expected[3] = 1'b0;
	x_expected[3] = #2119 1'b1;
	# 3266;
	repeat(2)
	begin
		x_expected[3] = 1'b0;
		x_expected[3] = #3400 1'b1;
		# 3266;
	end
	x_expected[3] = 1'b0;
	x_expected[3] = #2419 1'b1;
	x_expected[3] = #3318 1'b0;
	x_expected[3] = #13600 1'b1;
	x_expected[3] = #4751 1'b0;
	x_expected[3] = #3200 1'b1;
	x_expected[3] = #1800 1'b0;
	x_expected[3] = #3200 1'b1;
	x_expected[3] = #5608 1'b0;
	x_expected[3] = #11800 1'b1;
	x_expected[3] = #2723 1'b0;
	x_expected[3] = #1042 1'b1;
	x_expected[3] = #2200 1'b0;
	x_expected[3] = #2800 1'b1;
	x_expected[3] = #2200 1'b0;
	x_expected[3] = #1758 1'b1;
	x_expected[3] = #947 1'b0;
	x_expected[3] = #2500 1'b1;
	x_expected[3] = #2500 1'b0;
	x_expected[3] = #2500 1'b1;
	x_expected[3] = #1553 1'b0;
	x_expected[3] = #2346 1'b1;
	x_expected[3] = #1800 1'b0;
	x_expected[3] = #3200 1'b1;
	x_expected[3] = #1800 1'b0;
	x_expected[3] = #854 1'b1;
	x_expected[3] = #844 1'b0;
	x_expected[3] = #4500 1'b1;
	x_expected[3] = #4898 1'b0;
	x_expected[3] = #6000 1'b1;
	x_expected[3] = #10621 1'b0;
	x_expected[3] = #12000 1'b1;
	x_expected[3] = #1137 1'b0;
	x_expected[3] = #251 1'b1;
	x_expected[3] = #9800 1'b0;
	x_expected[3] = #10985 1'b1;
	x_expected[3] = #4100 1'b0;
	x_expected[3] = #7145 1'b1;
	# 3266;
	repeat(2)
	begin
		x_expected[3] = 1'b0;
		x_expected[3] = #3400 1'b1;
		# 3266;
	end
	x_expected[3] = 1'b0;
	x_expected[3] = #3245 1'b1;
	x_expected[3] = #4600 1'b0;
	x_expected[3] = #5805 1'b1;
	x_expected[3] = #4200 1'b0;
	x_expected[3] = #3271 1'b1;
	x_expected[3] = #1368 1'b0;
	x_expected[3] = #4600 1'b1;
	x_expected[3] = #8036 1'b0;
	x_expected[3] = #5500 1'b1;
	x_expected[3] = #496 1'b0;
	x_expected[3] = #328 1'b1;
	x_expected[3] = #2450 1'b0;
	x_expected[3] = #2550 1'b1;
	x_expected[3] = #2450 1'b0;
	x_expected[3] = #2222 1'b1;
	x_expected[3] = #2021 1'b0;
	x_expected[3] = #6600 1'b1;
	x_expected[3] = #3400 1'b0;
	x_expected[3] = #6600 1'b1;
	x_expected[3] = #1449 1'b0;
	x_expected[3] = #1900 1'b1;
	x_expected[3] = #1433 1'b0;
	x_expected[3] = #1900 1'b1;
	x_expected[3] = #1433 1'b0;
	x_expected[3] = #1900 1'b1;
	x_expected[3] = #1364 1'b0;
	x_expected[3] = #5504 1'b1;
	x_expected[3] = #4200 1'b0;
	x_expected[3] = #1233 1'b1;
	# 1433;
	repeat(2)
	begin
		x_expected[3] = 1'b0;
		x_expected[3] = #1900 1'b1;
		# 1433;
	end
	x_expected[3] = 1'b0;
	x_expected[3] = #7083 1'b1;
	x_expected[3] = #3400 1'b0;
	x_expected[3] = #6600 1'b1;
	x_expected[3] = #3400 1'b0;
end 
// expected x[ 2 ]
initial
begin
	x_expected[2] = 1'b1;
	x_expected[2] = #1164 1'b0;
	x_expected[2] = #5600 1'b1;
	x_expected[2] = #4400 1'b0;
	x_expected[2] = #5600 1'b1;
	x_expected[2] = #5539 1'b0;
	x_expected[2] = #6600 1'b1;
	x_expected[2] = #3400 1'b0;
	x_expected[2] = #6600 1'b1;
	x_expected[2] = #8152 1'b0;
	x_expected[2] = #9400 1'b1;
	x_expected[2] = #10586 1'b0;
	x_expected[2] = #12800 1'b1;
	x_expected[2] = #159 1'b0;
	x_expected[2] = #239 1'b1;
	x_expected[2] = #2250 1'b0;
	x_expected[2] = #2750 1'b1;
	x_expected[2] = #2250 1'b0;
	x_expected[2] = #2511 1'b1;
	x_expected[2] = #7730 1'b0;
	x_expected[2] = #10600 1'b1;
	x_expected[2] = #1718 1'b0;
	x_expected[2] = #4600 1'b1;
	x_expected[2] = #5400 1'b0;
	x_expected[2] = #4600 1'b1;
	x_expected[2] = #5352 1'b0;
	x_expected[2] = #1465 1'b1;
	x_expected[2] = #2650 1'b0;
	x_expected[2] = #2350 1'b1;
	x_expected[2] = #2650 1'b0;
	x_expected[2] = #885 1'b1;
	x_expected[2] = #2239 1'b0;
	x_expected[2] = #6800 1'b1;
	x_expected[2] = #3200 1'b0;
	x_expected[2] = #6800 1'b1;
	x_expected[2] = #961 1'b0;
	x_expected[2] = #3541 1'b1;
	# 2133;
	repeat(2)
	begin
		x_expected[2] = 1'b0;
		x_expected[2] = #4533 1'b1;
		# 2133;
	end
	x_expected[2] = 1'b0;
	x_expected[2] = #994 1'b1;
	# 1372;
	repeat(2)
	begin
		x_expected[2] = 1'b0;
		x_expected[2] = #1400 1'b1;
		# 1933;
	end
	x_expected[2] = 1'b0;
	x_expected[2] = #1400 1'b1;
	x_expected[2] = #2178 1'b0;
	x_expected[2] = #13200 1'b1;
	x_expected[2] = #5184 1'b0;
	x_expected[2] = #503 1'b1;
	x_expected[2] = #2000 1'b0;
	x_expected[2] = #3000 1'b1;
	x_expected[2] = #2000 1'b0;
	x_expected[2] = #2986 1'b1;
	# 1499;
	repeat(2)
	begin
		x_expected[2] = 1'b0;
		x_expected[2] = #1834 1'b1;
		# 1499;
	end
	x_expected[2] = 1'b0;
	x_expected[2] = #1346 1'b1;
	x_expected[2] = #2586 1'b0;
	x_expected[2] = #11000 1'b1;
	x_expected[2] = #6414 1'b0;
	x_expected[2] = #691 1'b1;
	# 1833;
	repeat(2)
	begin
		x_expected[2] = 1'b0;
		x_expected[2] = #1500 1'b1;
		# 1833;
	end
	x_expected[2] = 1'b0;
	x_expected[2] = #810 1'b1;
	x_expected[2] = #2794 1'b0;
	x_expected[2] = #5900 1'b1;
	x_expected[2] = #3000 1'b0;
	x_expected[2] = #2800 1'b1;
	x_expected[2] = #2200 1'b0;
	x_expected[2] = #2800 1'b1;
	x_expected[2] = #506 1'b0;
	x_expected[2] = #1296 1'b1;
	# 2866;
	repeat(2)
	begin
		x_expected[2] = 1'b0;
		x_expected[2] = #3800 1'b1;
		# 2866;
	end
	x_expected[2] = 1'b0;
	x_expected[2] = #5990 1'b1;
	# 2533;
	repeat(2)
	begin
		x_expected[2] = 1'b0;
		x_expected[2] = #4133 1'b1;
		# 2533;
	end
	x_expected[2] = 1'b0;
	x_expected[2] = #651 1'b1;
	x_expected[2] = #305 1'b0;
	x_expected[2] = #2000 1'b1;
	x_expected[2] = #3000 1'b0;
	x_expected[2] = #2000 1'b1;
	x_expected[2] = #2695 1'b0;
	x_expected[2] = #2274 1'b1;
	x_expected[2] = #2450 1'b0;
	x_expected[2] = #2550 1'b1;
	x_expected[2] = #2450 1'b0;
	x_expected[2] = #5034 1'b1;
	x_expected[2] = #4300 1'b0;
	x_expected[2] = #5700 1'b1;
	x_expected[2] = #4300 1'b0;
	x_expected[2] = #954 1'b1;
	# 2133;
	repeat(2)
	begin
		x_expected[2] = 1'b0;
		x_expected[2] = #4533 1'b1;
		# 2133;
	end
	x_expected[2] = 1'b0;
	x_expected[2] = #4523 1'b1;
	x_expected[2] = #613 1'b0;
	x_expected[2] = #6500 1'b1;
	x_expected[2] = #4026 1'b0;
	x_expected[2] = #2250 1'b1;
	x_expected[2] = #2750 1'b0;
	x_expected[2] = #2250 1'b1;
	x_expected[2] = #5619 1'b0;
	x_expected[2] = #5900 1'b1;
	x_expected[2] = #92 1'b0;
	x_expected[2] = #780 1'b1;
	# 1233;
	repeat(2)
	begin
		x_expected[2] = 1'b0;
		x_expected[2] = #2100 1'b1;
		# 1233;
	end
	x_expected[2] = 1'b0;
	x_expected[2] = #1321 1'b1;
	# 704;
	repeat(2)
	begin
		x_expected[2] = 1'b0;
		x_expected[2] = #1367 1'b1;
		# 1966;
	end
	x_expected[2] = 1'b0;
	x_expected[2] = #1367 1'b1;
	x_expected[2] = #1263 1'b0;
	x_expected[2] = #14 1'b1;
	# 1333;
	repeat(2)
	begin
		x_expected[2] = 1'b0;
		x_expected[2] = #2000 1'b1;
		# 1333;
	end
	x_expected[2] = 1'b0;
	x_expected[2] = #1987 1'b1;
	# 327;
	repeat(2)
	begin
		x_expected[2] = 1'b0;
		x_expected[2] = #2234 1'b1;
		# 1099;
	end
	x_expected[2] = 1'b0;
	x_expected[2] = #2234 1'b1;
	x_expected[2] = #9327 1'b0;
	x_expected[2] = #9400 1'b1;
	x_expected[2] = #2046 1'b0;
	x_expected[2] = #4300 1'b1;
	x_expected[2] = #4300 1'b0;
	x_expected[2] = #5700 1'b1;
	x_expected[2] = #4300 1'b0;
	x_expected[2] = #8857 1'b1;
	x_expected[2] = #11600 1'b0;
	x_expected[2] = #943 1'b1;
	x_expected[2] = #1284 1'b0;
	x_expected[2] = #8000 1'b1;
	x_expected[2] = #10716 1'b0;
	x_expected[2] = #4117 1'b1;
	x_expected[2] = #8200 1'b0;
	x_expected[2] = #7683 1'b1;
	# 1929;
	repeat(2)
	begin
		x_expected[2] = 1'b0;
		x_expected[2] = #4067 1'b1;
		# 2599;
	end
	x_expected[2] = 1'b0;
	x_expected[2] = #4067 1'b1;
	x_expected[2] = #3322 1'b0;
	x_expected[2] = #6400 1'b1;
	x_expected[2] = #3600 1'b0;
	x_expected[2] = #6400 1'b1;
	x_expected[2] = #2755 1'b0;
	x_expected[2] = #5800 1'b1;
	x_expected[2] = #2395 1'b0;
	x_expected[2] = #5501 1'b1;
	x_expected[2] = #3900 1'b0;
	x_expected[2] = #6100 1'b1;
	x_expected[2] = #3900 1'b0;
	x_expected[2] = #9146 1'b1;
	x_expected[2] = #9000 1'b0;
	x_expected[2] = #4687 1'b1;
	# 3666;
	repeat(2)
	begin
		x_expected[2] = 1'b0;
		x_expected[2] = #3000 1'b1;
		# 3666;
	end
	x_expected[2] = 1'b0;
	x_expected[2] = #2918 1'b1;
	x_expected[2] = #4300 1'b0;
	x_expected[2] = #3550 1'b1;
	# 2279;
	repeat(2)
	begin
		x_expected[2] = 1'b0;
		x_expected[2] = #3800 1'b1;
		# 2866;
	end
	x_expected[2] = 1'b0;
	x_expected[2] = #3800 1'b1;
	x_expected[2] = #1259 1'b0;
	x_expected[2] = #3467 1'b1;
	x_expected[2] = #3199 1'b0;
	x_expected[2] = #3467 1'b1;
	x_expected[2] = #3199 1'b0;
	x_expected[2] = #3467 1'b1;
	x_expected[2] = #2531 1'b0;
	x_expected[2] = #586 1'b1;
	x_expected[2] = #2050 1'b0;
	x_expected[2] = #2950 1'b1;
	x_expected[2] = #2050 1'b0;
	x_expected[2] = #4958 1'b1;
	x_expected[2] = #5900 1'b0;
	x_expected[2] = #1674 1'b1;
	x_expected[2] = #2000 1'b0;
	x_expected[2] = #3000 1'b1;
	x_expected[2] = #2000 1'b0;
	x_expected[2] = #6961 1'b1;
	x_expected[2] = #3700 1'b0;
	x_expected[2] = #6300 1'b1;
	x_expected[2] = #3700 1'b0;
	x_expected[2] = #2171 1'b1;
	# 851;
	repeat(2)
	begin
		x_expected[2] = 1'b0;
		x_expected[2] = #1767 1'b1;
		# 1566;
	end
	x_expected[2] = 1'b0;
	x_expected[2] = #1767 1'b1;
	x_expected[2] = #716 1'b0;
	x_expected[2] = #11114 1'b1;
	x_expected[2] = #6800 1'b0;
	x_expected[2] = #7002 1'b1;
	x_expected[2] = #6600 1'b0;
	x_expected[2] = #8484 1'b1;
	# 424;
	repeat(2)
	begin
		x_expected[2] = 1'b0;
		x_expected[2] = #2100 1'b1;
		# 1233;
	end
	x_expected[2] = 1'b0;
	x_expected[2] = #2100 1'b1;
	x_expected[2] = #1489 1'b0;
	x_expected[2] = #3267 1'b1;
	x_expected[2] = #3399 1'b0;
	x_expected[2] = #3267 1'b1;
	x_expected[2] = #3399 1'b0;
	x_expected[2] = #3267 1'b1;
	x_expected[2] = #5440 1'b0;
	x_expected[2] = #5700 1'b1;
	x_expected[2] = #4300 1'b0;
	x_expected[2] = #5700 1'b1;
	x_expected[2] = #7987 1'b0;
	x_expected[2] = #8000 1'b1;
	x_expected[2] = #6641 1'b0;
	x_expected[2] = #2267 1'b1;
	x_expected[2] = #1066 1'b0;
	x_expected[2] = #2267 1'b1;
	x_expected[2] = #1066 1'b0;
	x_expected[2] = #2267 1'b1;
	x_expected[2] = #1292 1'b0;
	x_expected[2] = #1834 1'b1;
	x_expected[2] = #1499 1'b0;
	x_expected[2] = #1834 1'b1;
	x_expected[2] = #1499 1'b0;
	x_expected[2] = #1834 1'b1;
	x_expected[2] = #504 1'b0;
	x_expected[2] = #5500 1'b1;
	x_expected[2] = #4869 1'b0;
	x_expected[2] = #13600 1'b1;
	x_expected[2] = #5756 1'b0;
	x_expected[2] = #5213 1'b1;
	x_expected[2] = #6800 1'b0;
	x_expected[2] = #13570 1'b1;
	x_expected[2] = #3200 1'b0;
	x_expected[2] = #5064 1'b1;
	x_expected[2] = #3100 1'b0;
	x_expected[2] = #6900 1'b1;
	x_expected[2] = #3100 1'b0;
	x_expected[2] = #7486 1'b1;
	x_expected[2] = #3200 1'b0;
	x_expected[2] = #2367 1'b1;
	x_expected[2] = #577 1'b0;
	x_expected[2] = #6900 1'b1;
end 
// expected x[ 1 ]
initial
begin
	x_expected[1] = 1'b1;
	x_expected[1] = #481 1'b0;
	x_expected[1] = #12400 1'b1;
	x_expected[1] = #12070 1'b0;
	x_expected[1] = #12200 1'b1;
	x_expected[1] = #4575 1'b0;
	x_expected[1] = #4067 1'b1;
	x_expected[1] = #2599 1'b0;
	x_expected[1] = #4067 1'b1;
	x_expected[1] = #2599 1'b0;
	x_expected[1] = #4067 1'b1;
	x_expected[1] = #1697 1'b0;
	x_expected[1] = #4400 1'b1;
	x_expected[1] = #5600 1'b0;
	x_expected[1] = #4400 1'b1;
	x_expected[1] = #4778 1'b0;
	x_expected[1] = #3395 1'b1;
	x_expected[1] = #4300 1'b0;
	x_expected[1] = #12551 1'b1;
	x_expected[1] = #9600 1'b0;
	x_expected[1] = #4566 1'b1;
	x_expected[1] = #4000 1'b0;
	x_expected[1] = #3883 1'b1;
	x_expected[1] = #2100 1'b0;
	x_expected[1] = #2900 1'b1;
	x_expected[1] = #2100 1'b0;
	x_expected[1] = #4956 1'b1;
	x_expected[1] = #4500 1'b0;
	x_expected[1] = #5500 1'b1;
	x_expected[1] = #4500 1'b0;
	x_expected[1] = #1149 1'b1;
	# 1244;
	repeat(2)
	begin
		x_expected[1] = 1'b0;
		x_expected[1] = #4333 1'b1;
		# 2333;
	end
	x_expected[1] = 1'b0;
	x_expected[1] = #4333 1'b1;
	x_expected[1] = #1703 1'b0;
	x_expected[1] = #3350 1'b1;
	x_expected[1] = #1650 1'b0;
	x_expected[1] = #3350 1'b1;
	x_expected[1] = #1038 1'b0;
	x_expected[1] = #3275 1'b1;
	x_expected[1] = #3000 1'b0;
	x_expected[1] = #3725 1'b1;
	x_expected[1] = #765 1'b0;
	x_expected[1] = #3050 1'b1;
	x_expected[1] = #1950 1'b0;
	x_expected[1] = #3050 1'b1;
	x_expected[1] = #1185 1'b0;
	x_expected[1] = #927 1'b1;
	x_expected[1] = #3200 1'b0;
	x_expected[1] = #5873 1'b1;
	x_expected[1] = #2270 1'b0;
	x_expected[1] = #5100 1'b1;
	x_expected[1] = #3187 1'b0;
	x_expected[1] = #4300 1'b1;
	x_expected[1] = #5700 1'b0;
	x_expected[1] = #4300 1'b1;
	x_expected[1] = #5652 1'b0;
	x_expected[1] = #13400 1'b1;
	x_expected[1] = #6091 1'b0;
	x_expected[1] = #2714 1'b1;
	x_expected[1] = #6400 1'b0;
	x_expected[1] = #10886 1'b1;
	x_expected[1] = #2972 1'b0;
	x_expected[1] = #5900 1'b1;
	x_expected[1] = #4100 1'b0;
	x_expected[1] = #5900 1'b1;
	x_expected[1] = #1128 1'b0;
	x_expected[1] = #3691 1'b1;
	x_expected[1] = #6400 1'b0;
	x_expected[1] = #9909 1'b1;
	x_expected[1] = #1207 1'b0;
	x_expected[1] = #3200 1'b1;
	x_expected[1] = #1800 1'b0;
	x_expected[1] = #3200 1'b1;
	x_expected[1] = #983 1'b0;
	x_expected[1] = #2800 1'b1;
	x_expected[1] = #2200 1'b0;
	x_expected[1] = #2800 1'b1;
	x_expected[1] = #1810 1'b0;
	x_expected[1] = #735 1'b1;
	x_expected[1] = #5200 1'b0;
	x_expected[1] = #4065 1'b1;
	x_expected[1] = #38 1'b0;
	x_expected[1] = #5700 1'b1;
	x_expected[1] = #4300 1'b0;
	x_expected[1] = #5700 1'b1;
	x_expected[1] = #4262 1'b0;
	x_expected[1] = #643 1'b1;
	x_expected[1] = #1550 1'b0;
	x_expected[1] = #3450 1'b1;
	x_expected[1] = #1550 1'b0;
	x_expected[1] = #4512 1'b1;
	# 1433;
	repeat(2)
	begin
		x_expected[1] = 1'b0;
		x_expected[1] = #1900 1'b1;
		# 1433;
	end
	x_expected[1] = 1'b0;
	x_expected[1] = #2199 1'b1;
	x_expected[1] = #5100 1'b0;
	x_expected[1] = #2897 1'b1;
	x_expected[1] = #2504 1'b0;
	x_expected[1] = #12400 1'b1;
	x_expected[1] = #5096 1'b0;
	x_expected[1] = #4978 1'b1;
	x_expected[1] = #4300 1'b0;
	x_expected[1] = #5700 1'b1;
	x_expected[1] = #4300 1'b0;
	x_expected[1] = #722 1'b1;
	x_expected[1] = #2123 1'b0;
	x_expected[1] = #2600 1'b1;
	x_expected[1] = #2400 1'b0;
	x_expected[1] = #2600 1'b1;
	x_expected[1] = #277 1'b0;
	x_expected[1] = #911 1'b1;
	# 1133;
	repeat(2)
	begin
		x_expected[1] = 1'b0;
		x_expected[1] = #2200 1'b1;
		# 1133;
	end
	x_expected[1] = 1'b0;
	x_expected[1] = #1290 1'b1;
	x_expected[1] = #3400 1'b0;
	x_expected[1] = #4200 1'b1;
	x_expected[1] = #5800 1'b0;
	x_expected[1] = #4200 1'b1;
	x_expected[1] = #4541 1'b0;
	x_expected[1] = #6000 1'b1;
	x_expected[1] = #4000 1'b0;
	x_expected[1] = #6000 1'b1;
	x_expected[1] = #2601 1'b0;
	x_expected[1] = #6000 1'b1;
	x_expected[1] = #3258 1'b0;
	x_expected[1] = #4309 1'b1;
	x_expected[1] = #4600 1'b0;
	x_expected[1] = #3563 1'b1;
	x_expected[1] = #3000 1'b0;
	x_expected[1] = #4762 1'b1;
	# 1533;
	repeat(2)
	begin
		x_expected[1] = 1'b0;
		x_expected[1] = #1800 1'b1;
		# 1533;
	end
	x_expected[1] = 1'b0;
	x_expected[1] = #1567 1'b1;
	x_expected[1] = #165 1'b0;
	x_expected[1] = #3500 1'b1;
	x_expected[1] = #1500 1'b0;
	x_expected[1] = #3500 1'b1;
	x_expected[1] = #5001 1'b0;
	x_expected[1] = #2800 1'b1;
	x_expected[1] = #3866 1'b0;
	x_expected[1] = #2800 1'b1;
	x_expected[1] = #3866 1'b0;
	x_expected[1] = #2800 1'b1;
	x_expected[1] = #2595 1'b0;
	x_expected[1] = #5900 1'b1;
	x_expected[1] = #4100 1'b0;
	x_expected[1] = #5900 1'b1;
	x_expected[1] = #1707 1'b0;
	x_expected[1] = #3431 1'b1;
	x_expected[1] = #3900 1'b0;
	x_expected[1] = #4751 1'b1;
	# 3532;
	repeat(2)
	begin
		x_expected[1] = 1'b0;
		x_expected[1] = #3134 1'b1;
		# 3532;
	end
	x_expected[1] = 1'b0;
	x_expected[1] = #1054 1'b1;
	x_expected[1] = #2493 1'b0;
	x_expected[1] = #5700 1'b1;
	x_expected[1] = #1807 1'b0;
	x_expected[1] = #1069 1'b1;
	# 1733;
	repeat(2)
	begin
		x_expected[1] = 1'b0;
		x_expected[1] = #1600 1'b1;
		# 1733;
	end
	x_expected[1] = 1'b0;
	x_expected[1] = #532 1'b1;
	x_expected[1] = #1402 1'b0;
	x_expected[1] = #6100 1'b1;
	x_expected[1] = #3900 1'b0;
	x_expected[1] = #6100 1'b1;
	x_expected[1] = #2498 1'b0;
	x_expected[1] = #459 1'b1;
	x_expected[1] = #2250 1'b0;
	x_expected[1] = #2750 1'b1;
	x_expected[1] = #2250 1'b0;
	x_expected[1] = #2291 1'b1;
	x_expected[1] = #2041 1'b0;
	x_expected[1] = #5300 1'b1;
	x_expected[1] = #2659 1'b0;
	x_expected[1] = #1186 1'b1;
	x_expected[1] = #4400 1'b0;
	x_expected[1] = #4414 1'b1;
	x_expected[1] = #705 1'b0;
	x_expected[1] = #5800 1'b1;
	x_expected[1] = #4200 1'b0;
	x_expected[1] = #5800 1'b1;
	x_expected[1] = #3495 1'b0;
	x_expected[1] = #1253 1'b1;
	# 1966;
	repeat(2)
	begin
		x_expected[1] = 1'b0;
		x_expected[1] = #1367 1'b1;
		# 1966;
	end
	x_expected[1] = 1'b0;
	x_expected[1] = #115 1'b1;
	x_expected[1] = #3465 1'b0;
	x_expected[1] = #4900 1'b1;
	x_expected[1] = #2791 1'b0;
	x_expected[1] = #1834 1'b1;
	x_expected[1] = #1499 1'b0;
	x_expected[1] = #1834 1'b1;
	x_expected[1] = #1499 1'b0;
	x_expected[1] = #1834 1'b1;
	x_expected[1] = #7223 1'b0;
	x_expected[1] = #12000 1'b1;
	x_expected[1] = #1121 1'b0;
	x_expected[1] = #4803 1'b1;
	x_expected[1] = #3800 1'b0;
	x_expected[1] = #2946 1'b1;
	x_expected[1] = #2800 1'b0;
	x_expected[1] = #2200 1'b1;
	x_expected[1] = #2800 1'b0;
	x_expected[1] = #1223 1'b1;
	# 2199;
	repeat(2)
	begin
		x_expected[1] = 1'b0;
		x_expected[1] = #4467 1'b1;
		# 2199;
	end
	x_expected[1] = 1'b0;
	x_expected[1] = #3897 1'b1;
	# 1711;
	repeat(2)
	begin
		x_expected[1] = 1'b0;
		x_expected[1] = #4000 1'b1;
		# 2666;
	end
	x_expected[1] = 1'b0;
	x_expected[1] = #4000 1'b1;
	x_expected[1] = #957 1'b0;
	x_expected[1] = #1984 1'b1;
	x_expected[1] = #1600 1'b0;
	x_expected[1] = #3400 1'b1;
	x_expected[1] = #1600 1'b0;
	x_expected[1] = #1416 1'b1;
	x_expected[1] = #1703 1'b0;
	x_expected[1] = #12200 1'b1;
	x_expected[1] = #6097 1'b0;
	x_expected[1] = #5551 1'b1;
	x_expected[1] = #4000 1'b0;
	x_expected[1] = #6000 1'b1;
	x_expected[1] = #4000 1'b0;
	x_expected[1] = #449 1'b1;
	x_expected[1] = #5066 1'b0;
	x_expected[1] = #12000 1'b1;
	x_expected[1] = #4781 1'b0;
	x_expected[1] = #3400 1'b1;
	x_expected[1] = #3266 1'b0;
	x_expected[1] = #3400 1'b1;
	x_expected[1] = #3266 1'b0;
	x_expected[1] = #3400 1'b1;
	x_expected[1] = #2957 1'b0;
	x_expected[1] = #3800 1'b1;
	x_expected[1] = #2866 1'b0;
	x_expected[1] = #3800 1'b1;
	x_expected[1] = #2866 1'b0;
	x_expected[1] = #3800 1'b1;
	x_expected[1] = #1332 1'b0;
	x_expected[1] = #3229 1'b1;
	x_expected[1] = #1750 1'b0;
	x_expected[1] = #3250 1'b1;
	x_expected[1] = #1750 1'b0;
	x_expected[1] = #21 1'b1;
	x_expected[1] = #4071 1'b0;
	x_expected[1] = #4400 1'b1;
	x_expected[1] = #5600 1'b0;
	x_expected[1] = #4400 1'b1;
	x_expected[1] = #1529 1'b0;
	x_expected[1] = #5150 1'b1;
	x_expected[1] = #4500 1'b0;
	x_expected[1] = #3941 1'b1;
	# 2799;
	repeat(2)
	begin
		x_expected[1] = 1'b0;
		x_expected[1] = #3867 1'b1;
		# 2799;
	end
	x_expected[1] = 1'b0;
	x_expected[1] = #1083 1'b1;
	x_expected[1] = #2450 1'b0;
	x_expected[1] = #2550 1'b1;
	x_expected[1] = #2450 1'b0;
end 
// expected x[ 0 ]
initial
begin
	x_expected[0] = 1'b1;
	x_expected[0] = #4897 1'b0;
	x_expected[0] = #9000 1'b1;
	x_expected[0] = #8192 1'b0;
	x_expected[0] = #3867 1'b1;
	x_expected[0] = #2799 1'b0;
	x_expected[0] = #3867 1'b1;
	x_expected[0] = #2799 1'b0;
	x_expected[0] = #3867 1'b1;
	x_expected[0] = #2289 1'b0;
	x_expected[0] = #5100 1'b1;
	x_expected[0] = #4900 1'b0;
	x_expected[0] = #5100 1'b1;
	x_expected[0] = #3323 1'b0;
	x_expected[0] = #114 1'b1;
	# 1033;
	repeat(2)
	begin
		x_expected[0] = 1'b0;
		x_expected[0] = #2300 1'b1;
		# 1033;
	end
	x_expected[0] = 1'b0;
	x_expected[0] = #2258 1'b1;
	x_expected[0] = #7400 1'b0;
	x_expected[0] = #12529 1'b1;
	# 2245;
	repeat(2)
	begin
		x_expected[0] = 1'b0;
		x_expected[0] = #3933 1'b1;
		# 2733;
	end
	x_expected[0] = 1'b0;
	x_expected[0] = #3933 1'b1;
	x_expected[0] = #2600 1'b0;
	x_expected[0] = #4067 1'b1;
	x_expected[0] = #2599 1'b0;
	x_expected[0] = #4067 1'b1;
	x_expected[0] = #2599 1'b0;
	x_expected[0] = #4067 1'b1;
	x_expected[0] = #491 1'b0;
	x_expected[0] = #189 1'b1;
	# 1899;
	repeat(2)
	begin
		x_expected[0] = 1'b0;
		x_expected[0] = #1434 1'b1;
		# 1899;
	end
	x_expected[0] = 1'b0;
	x_expected[0] = #1626 1'b1;
	x_expected[0] = #9200 1'b0;
	x_expected[0] = #10420 1'b1;
	x_expected[0] = #3000 1'b0;
	x_expected[0] = #5200 1'b1;
	x_expected[0] = #3003 1'b0;
	x_expected[0] = #1434 1'b1;
	x_expected[0] = #1899 1'b0;
	x_expected[0] = #1434 1'b1;
	x_expected[0] = #1899 1'b0;
	x_expected[0] = #1434 1'b1;
	x_expected[0] = #3221 1'b0;
	x_expected[0] = #2050 1'b1;
	x_expected[0] = #2950 1'b0;
	x_expected[0] = #2050 1'b1;
	x_expected[0] = #426 1'b0;
	x_expected[0] = #3569 1'b1;
	x_expected[0] = #4000 1'b0;
	x_expected[0] = #3419 1'b1;
	# 2999;
	repeat(2)
	begin
		x_expected[0] = 1'b0;
		x_expected[0] = #3667 1'b1;
		# 2999;
	end
	x_expected[0] = 1'b0;
	x_expected[0] = #3310 1'b1;
	x_expected[0] = #1550 1'b0;
	x_expected[0] = #3450 1'b1;
	x_expected[0] = #1550 1'b0;
	x_expected[0] = #2821 1'b1;
	x_expected[0] = #425 1'b0;
	x_expected[0] = #5400 1'b1;
	x_expected[0] = #4600 1'b0;
	x_expected[0] = #5400 1'b1;
	x_expected[0] = #4175 1'b0;
	x_expected[0] = #1159 1'b1;
	# 1033;
	repeat(2)
	begin
		x_expected[0] = 1'b0;
		x_expected[0] = #2300 1'b1;
		# 1033;
	end
	x_expected[0] = 1'b0;
	x_expected[0] = #1142 1'b1;
	x_expected[0] = #46 1'b0;
	x_expected[0] = #6500 1'b1;
	x_expected[0] = #3500 1'b0;
	x_expected[0] = #6500 1'b1;
	x_expected[0] = #4319 1'b0;
	x_expected[0] = #4000 1'b1;
	x_expected[0] = #2666 1'b0;
	x_expected[0] = #4000 1'b1;
	x_expected[0] = #2666 1'b0;
	x_expected[0] = #4000 1'b1;
	x_expected[0] = #2313 1'b0;
	x_expected[0] = #2100 1'b1;
	x_expected[0] = #1233 1'b0;
	x_expected[0] = #2100 1'b1;
	x_expected[0] = #1233 1'b0;
	x_expected[0] = #2100 1'b1;
	x_expected[0] = #724 1'b0;
	x_expected[0] = #4291 1'b1;
	x_expected[0] = #10000 1'b0;
	x_expected[0] = #6119 1'b1;
	x_expected[0] = #2200 1'b0;
	x_expected[0] = #2800 1'b1;
	x_expected[0] = #2200 1'b0;
	x_expected[0] = #2718 1'b1;
	x_expected[0] = #3300 1'b0;
	x_expected[0] = #6372 1'b1;
	x_expected[0] = #2228 1'b0;
	x_expected[0] = #5600 1'b1;
	x_expected[0] = #4400 1'b0;
	x_expected[0] = #5600 1'b1;
	x_expected[0] = #5582 1'b0;
	x_expected[0] = #5500 1'b1;
	x_expected[0] = #4500 1'b0;
	x_expected[0] = #5500 1'b1;
	x_expected[0] = #1090 1'b0;
	x_expected[0] = #969 1'b1;
	x_expected[0] = #5600 1'b0;
	x_expected[0] = #4400 1'b1;
	x_expected[0] = #5600 1'b0;
	x_expected[0] = #5731 1'b1;
	x_expected[0] = #2450 1'b0;
	x_expected[0] = #2550 1'b1;
	x_expected[0] = #2450 1'b0;
	x_expected[0] = #3869 1'b1;
	x_expected[0] = #3000 1'b0;
	x_expected[0] = #7000 1'b1;
	x_expected[0] = #3000 1'b0;
	x_expected[0] = #5650 1'b1;
	x_expected[0] = #1800 1'b0;
	x_expected[0] = #3200 1'b1;
	x_expected[0] = #1800 1'b0;
	x_expected[0] = #931 1'b1;
	x_expected[0] = #2667 1'b0;
	x_expected[0] = #6600 1'b1;
	x_expected[0] = #3400 1'b0;
	x_expected[0] = #6600 1'b1;
	x_expected[0] = #733 1'b0;
	x_expected[0] = #2948 1'b1;
	x_expected[0] = #4300 1'b0;
	x_expected[0] = #7131 1'b1;
	x_expected[0] = #4400 1'b0;
	x_expected[0] = #5600 1'b1;
	x_expected[0] = #4400 1'b0;
	x_expected[0] = #1221 1'b1;
	x_expected[0] = #9885 1'b0;
	x_expected[0] = #9400 1'b1;
	x_expected[0] = #715 1'b0;
	x_expected[0] = #1266 1'b1;
	x_expected[0] = #4800 1'b0;
	x_expected[0] = #7530 1'b1;
	# 2199;
	repeat(2)
	begin
		x_expected[0] = 1'b0;
		x_expected[0] = #4467 1'b1;
		# 2199;
	end
	x_expected[0] = 1'b0;
	x_expected[0] = #873 1'b1;
	x_expected[0] = #267 1'b0;
	x_expected[0] = #3100 1'b1;
	x_expected[0] = #1900 1'b0;
	x_expected[0] = #3100 1'b1;
	x_expected[0] = #1633 1'b0;
	x_expected[0] = #1142 1'b1;
	# 1499;
	repeat(2)
	begin
		x_expected[0] = 1'b0;
		x_expected[0] = #1834 1'b1;
		# 1499;
	end
	x_expected[0] = 1'b0;
	x_expected[0] = #693 1'b1;
	x_expected[0] = #4902 1'b0;
	x_expected[0] = #10400 1'b1;
	x_expected[0] = #5572 1'b0;
	x_expected[0] = #3733 1'b1;
	x_expected[0] = #2933 1'b0;
	x_expected[0] = #3733 1'b1;
	x_expected[0] = #2933 1'b0;
	x_expected[0] = #3733 1'b1;
	x_expected[0] = #2061 1'b0;
	x_expected[0] = #3441 1'b1;
	x_expected[0] = #5300 1'b0;
	x_expected[0] = #2127 1'b1;
	x_expected[0] = #5000 1'b0;
	x_expected[0] = #5000 1'b1;
	x_expected[0] = #5000 1'b0;
	x_expected[0] = #7458 1'b1;
	# 2133;
	repeat(2)
	begin
		x_expected[0] = 1'b0;
		x_expected[0] = #4533 1'b1;
		# 2133;
	end
	x_expected[0] = 1'b0;
	x_expected[0] = #1209 1'b1;
	# 633;
	repeat(2)
	begin
		x_expected[0] = 1'b0;
		x_expected[0] = #1967 1'b1;
		# 1366;
	end
	x_expected[0] = 1'b0;
	x_expected[0] = #1967 1'b1;
	x_expected[0] = #1713 1'b0;
	x_expected[0] = #5800 1'b1;
	x_expected[0] = #4200 1'b0;
	x_expected[0] = #5800 1'b1;
	x_expected[0] = #4357 1'b0;
	x_expected[0] = #1767 1'b1;
	x_expected[0] = #1566 1'b0;
	x_expected[0] = #1767 1'b1;
	x_expected[0] = #1566 1'b0;
	x_expected[0] = #1767 1'b1;
	x_expected[0] = #431 1'b0;
	x_expected[0] = #1044 1'b1;
	# 1933;
	repeat(2)
	begin
		x_expected[0] = 1'b0;
		x_expected[0] = #1400 1'b1;
		# 1933;
	end
	x_expected[0] = 1'b0;
	x_expected[0] = #4487 1'b1;
	x_expected[0] = #11400 1'b0;
	x_expected[0] = #9710 1'b1;
	x_expected[0] = #4500 1'b0;
	x_expected[0] = #5500 1'b1;
	x_expected[0] = #4500 1'b0;
	x_expected[0] = #260 1'b1;
	x_expected[0] = #5480 1'b0;
	x_expected[0] = #4100 1'b1;
	x_expected[0] = #5900 1'b0;
	x_expected[0] = #4100 1'b1;
	x_expected[0] = #2231 1'b0;
	x_expected[0] = #3667 1'b1;
	x_expected[0] = #2999 1'b0;
	x_expected[0] = #3667 1'b1;
	x_expected[0] = #2999 1'b0;
	x_expected[0] = #3667 1'b1;
	x_expected[0] = #1190 1'b0;
	x_expected[0] = #1160 1'b1;
	# 1833;
	repeat(2)
	begin
		x_expected[0] = 1'b0;
		x_expected[0] = #1500 1'b1;
		# 1833;
	end
	x_expected[0] = 1'b0;
	x_expected[0] = #341 1'b1;
	# 1200;
	repeat(2)
	begin
		x_expected[0] = 1'b0;
		x_expected[0] = #3400 1'b1;
		# 3266;
	end
	x_expected[0] = 1'b0;
	x_expected[0] = #3400 1'b1;
	x_expected[0] = #7031 1'b0;
	x_expected[0] = #4100 1'b1;
	x_expected[0] = #937 1'b0;
	x_expected[0] = #1307 1'b1;
	# 1033;
	repeat(2)
	begin
		x_expected[0] = 1'b0;
		x_expected[0] = #2300 1'b1;
		# 1033;
	end
	x_expected[0] = 1'b0;
	x_expected[0] = #994 1'b1;
	x_expected[0] = #1526 1'b0;
	x_expected[0] = #3350 1'b1;
	x_expected[0] = #1650 1'b0;
	x_expected[0] = #3350 1'b1;
	x_expected[0] = #802 1'b0;
	x_expected[0] = #2750 1'b1;
	x_expected[0] = #2250 1'b0;
	x_expected[0] = #2750 1'b1;
	x_expected[0] = #1572 1'b0;
	x_expected[0] = #4482 1'b1;
	# 2066;
	repeat(2)
	begin
		x_expected[0] = 1'b0;
		x_expected[0] = #4600 1'b1;
		# 2066;
	end
	x_expected[0] = 1'b0;
	x_expected[0] = #943 1'b1;
	# 1466;
	repeat(2)
	begin
		x_expected[0] = 1'b0;
		x_expected[0] = #1867 1'b1;
		# 1466;
	end
	x_expected[0] = 1'b0;
	x_expected[0] = #6223 1'b1;
	x_expected[0] = #4600 1'b0;
	x_expected[0] = #5400 1'b1;
	x_expected[0] = #4600 1'b0;
	x_expected[0] = #222 1'b1;
	x_expected[0] = #697 1'b0;
	x_expected[0] = #5200 1'b1;
	x_expected[0] = #4103 1'b0;
	x_expected[0] = #3669 1'b1;
	x_expected[0] = #3500 1'b0;
	x_expected[0] = #6500 1'b1;
	x_expected[0] = #3500 1'b0;
	x_expected[0] = #2831 1'b1;
	# 1352;
	repeat(2)
	begin
		x_expected[0] = 1'b0;
		x_expected[0] = #1500 1'b1;
		# 1833;
	end
	x_expected[0] = 1'b0;
	x_expected[0] = #1500 1'b1;
	x_expected[0] = #1152 1'b0;
	x_expected[0] = #2650 1'b1;
	x_expected[0] = #2350 1'b0;
	x_expected[0] = #2650 1'b1;
	x_expected[0] = #1680 1'b0;
	x_expected[0] = #584 1'b1;
	x_expected[0] = #3300 1'b0;
	x_expected[0] = #6700 1'b1;
	x_expected[0] = #3300 1'b0;
	x_expected[0] = #7496 1'b1;
	x_expected[0] = #2050 1'b0;
	x_expected[0] = #2950 1'b1;
	x_expected[0] = #2050 1'b0;
	x_expected[0] = #1570 1'b1;
	x_expected[0] = #864 1'b0;
	x_expected[0] = #3200 1'b1;
	x_expected[0] = #1800 1'b0;
	x_expected[0] = #3200 1'b1;
end 
// expected y[ 3 ]
initial
begin
	y_expected[3] = 1'b0;
	y_expected[3] = #1232 1'b1;
	# 2933;
	repeat(2)
	begin
		y_expected[3] = 1'b0;
		y_expected[3] = #3733 1'b1;
		# 2933;
	end
	y_expected[3] = 1'b0;
	y_expected[3] = #3556 1'b1;
	# 2266;
	repeat(2)
	begin
		y_expected[3] = 1'b0;
		y_expected[3] = #4400 1'b1;
		# 2266;
	end
	y_expected[3] = 1'b0;
	y_expected[3] = #5271 1'b1;
	# 1166;
	repeat(2)
	begin
		y_expected[3] = 1'b0;
		y_expected[3] = #2167 1'b1;
		# 1166;
	end
	y_expected[3] = 1'b0;
	y_expected[3] = #246 1'b1;
	y_expected[3] = #2395 1'b0;
	y_expected[3] = #5100 1'b1;
	y_expected[3] = #4900 1'b0;
	y_expected[3] = #5100 1'b1;
	y_expected[3] = #2505 1'b0;
	y_expected[3] = #204 1'b1;
	y_expected[3] = #3600 1'b0;
	y_expected[3] = #6196 1'b1;
	y_expected[3] = #1418 1'b0;
	y_expected[3] = #6000 1'b1;
	y_expected[3] = #4000 1'b0;
	y_expected[3] = #6000 1'b1;
	y_expected[3] = #3117 1'b0;
	y_expected[3] = #2000 1'b1;
	y_expected[3] = #1333 1'b0;
	y_expected[3] = #2000 1'b1;
	y_expected[3] = #1333 1'b0;
	y_expected[3] = #2000 1'b1;
	y_expected[3] = #975 1'b0;
	y_expected[3] = #4100 1'b1;
	y_expected[3] = #5724 1'b0;
	y_expected[3] = #820 1'b1;
	y_expected[3] = #2900 1'b0;
	y_expected[3] = #2100 1'b1;
	y_expected[3] = #2900 1'b0;
	y_expected[3] = #10934 1'b1;
	y_expected[3] = #9600 1'b0;
	y_expected[3] = #3100 1'b1;
	y_expected[3] = #2100 1'b0;
	y_expected[3] = #2900 1'b1;
	y_expected[3] = #2100 1'b0;
	y_expected[3] = #546 1'b1;
	y_expected[3] = #873 1'b0;
	y_expected[3] = #2850 1'b1;
	y_expected[3] = #2150 1'b0;
	y_expected[3] = #2850 1'b1;
	y_expected[3] = #5901 1'b0;
	y_expected[3] = #13600 1'b1;
	y_expected[3] = #1776 1'b0;
	y_expected[3] = #248 1'b1;
	# 3133;
	repeat(2)
	begin
		y_expected[3] = 1'b0;
		y_expected[3] = #3533 1'b1;
		# 3133;
	end
	y_expected[3] = 1'b0;
	y_expected[3] = #3287 1'b1;
	# 631;
	repeat(2)
	begin
		y_expected[3] = 1'b0;
		y_expected[3] = #3867 1'b1;
		# 2799;
	end
	y_expected[3] = 1'b0;
	y_expected[3] = #3867 1'b1;
	y_expected[3] = #2170 1'b0;
	y_expected[3] = #2449 1'b1;
	# 2866;
	repeat(2)
	begin
		y_expected[3] = 1'b0;
		y_expected[3] = #3800 1'b1;
		# 2866;
	end
	y_expected[3] = 1'b0;
	y_expected[3] = #1353 1'b1;
	y_expected[3] = #656 1'b0;
	y_expected[3] = #3450 1'b1;
	y_expected[3] = #1550 1'b0;
	y_expected[3] = #3450 1'b1;
	y_expected[3] = #894 1'b0;
	y_expected[3] = #383 1'b1;
	y_expected[3] = #3800 1'b0;
	y_expected[3] = #9552 1'b1;
	y_expected[3] = #3400 1'b0;
	y_expected[3] = #2865 1'b1;
	y_expected[3] = #939 1'b0;
	y_expected[3] = #3250 1'b1;
	y_expected[3] = #1750 1'b0;
	y_expected[3] = #3250 1'b1;
	y_expected[3] = #811 1'b0;
	y_expected[3] = #2361 1'b1;
	y_expected[3] = #5900 1'b0;
	y_expected[3] = #4100 1'b1;
	y_expected[3] = #5900 1'b0;
	y_expected[3] = #1739 1'b1;
	# 835;
	repeat(2)
	begin
		y_expected[3] = 1'b0;
		y_expected[3] = #1967 1'b1;
		# 1366;
	end
	y_expected[3] = 1'b0;
	y_expected[3] = #1967 1'b1;
	y_expected[3] = #532 1'b0;
	y_expected[3] = #2838 1'b1;
	# 3666;
	repeat(2)
	begin
		y_expected[3] = 1'b0;
		y_expected[3] = #3000 1'b1;
		# 3666;
	end
	y_expected[3] = 1'b0;
	y_expected[3] = #164 1'b1;
	y_expected[3] = #2237 1'b0;
	y_expected[3] = #2500 1'b1;
	y_expected[3] = #2500 1'b0;
	y_expected[3] = #2500 1'b1;
	y_expected[3] = #771 1'b0;
	y_expected[3] = #6900 1'b1;
	y_expected[3] = #3100 1'b0;
	y_expected[3] = #6900 1'b1;
	y_expected[3] = #2592 1'b0;
	y_expected[3] = #1418 1'b1;
	y_expected[3] = #4800 1'b0;
	y_expected[3] = #5200 1'b1;
	y_expected[3] = #4800 1'b0;
	y_expected[3] = #3782 1'b1;
	# 1780;
	repeat(2)
	begin
		y_expected[3] = 1'b0;
		y_expected[3] = #3733 1'b1;
		# 2933;
	end
	y_expected[3] = 1'b0;
	y_expected[3] = #3733 1'b1;
	y_expected[3] = #4123 1'b0;
	y_expected[3] = #4800 1'b1;
	y_expected[3] = #5200 1'b0;
	y_expected[3] = #4800 1'b1;
	y_expected[3] = #2232 1'b0;
	y_expected[3] = #234 1'b1;
	y_expected[3] = #1800 1'b0;
	y_expected[3] = #3200 1'b1;
	y_expected[3] = #1800 1'b0;
	y_expected[3] = #2966 1'b1;
	y_expected[3] = #2968 1'b0;
	y_expected[3] = #6500 1'b1;
	y_expected[3] = #532 1'b0;
	y_expected[3] = #8570 1'b1;
	y_expected[3] = #8400 1'b0;
	y_expected[3] = #4317 1'b1;
	y_expected[3] = #11400 1'b0;
	y_expected[3] = #7766 1'b1;
	y_expected[3] = #3000 1'b0;
	y_expected[3] = #8677 1'b1;
	y_expected[3] = #5700 1'b0;
	y_expected[3] = #2170 1'b1;
	y_expected[3] = #7012 1'b0;
	y_expected[3] = #9600 1'b1;
	y_expected[3] = #6213 1'b0;
	y_expected[3] = #13200 1'b1;
	y_expected[3] = #7415 1'b0;
	y_expected[3] = #6400 1'b1;
	y_expected[3] = #1800 1'b0;
	y_expected[3] = #11000 1'b1;
	y_expected[3] = #7360 1'b0;
	y_expected[3] = #1227 1'b1;
	# 3133;
	repeat(2)
	begin
		y_expected[3] = 1'b0;
		y_expected[3] = #3533 1'b1;
		# 3133;
	end
	y_expected[3] = 1'b0;
	y_expected[3] = #2308 1'b1;
	y_expected[3] = #1625 1'b0;
	y_expected[3] = #6700 1'b1;
	y_expected[3] = #1675 1'b0;
	y_expected[3] = #1644 1'b1;
	# 1533;
	repeat(2)
	begin
		y_expected[3] = 1'b0;
		y_expected[3] = #1800 1'b1;
		# 1533;
	end
	y_expected[3] = 1'b0;
	y_expected[3] = #5105 1'b1;
	y_expected[3] = #4800 1'b0;
	y_expected[3] = #5200 1'b1;
	y_expected[3] = #4800 1'b0;
	y_expected[3] = #1783 1'b1;
	# 3466;
	repeat(2)
	begin
		y_expected[3] = 1'b0;
		y_expected[3] = #3200 1'b1;
		# 3466;
	end
	y_expected[3] = 1'b0;
	y_expected[3] = #1671 1'b1;
	# 166;
	repeat(2)
	begin
		y_expected[3] = 1'b0;
		y_expected[3] = #1934 1'b1;
		# 1399;
	end
	y_expected[3] = 1'b0;
	y_expected[3] = #1934 1'b1;
	y_expected[3] = #1234 1'b0;
	y_expected[3] = #1554 1'b1;
	# 1366;
	repeat(2)
	begin
		y_expected[3] = 1'b0;
		y_expected[3] = #1967 1'b1;
		# 1366;
	end
	y_expected[3] = 1'b0;
	y_expected[3] = #10668 1'b1;
	y_expected[3] = #8400 1'b0;
	y_expected[3] = #1346 1'b1;
	y_expected[3] = #1741 1'b0;
	y_expected[3] = #5700 1'b1;
	y_expected[3] = #4300 1'b0;
	y_expected[3] = #5700 1'b1;
	y_expected[3] = #2559 1'b0;
	y_expected[3] = #2466 1'b1;
	y_expected[3] = #7600 1'b0;
	y_expected[3] = #9934 1'b1;
	y_expected[3] = #1364 1'b0;
	y_expected[3] = #5900 1'b1;
	y_expected[3] = #4100 1'b0;
	y_expected[3] = #5900 1'b1;
	y_expected[3] = #2736 1'b0;
	y_expected[3] = #4959 1'b1;
	y_expected[3] = #4300 1'b0;
	y_expected[3] = #741 1'b1;
	y_expected[3] = #836 1'b0;
	y_expected[3] = #12200 1'b1;
	y_expected[3] = #6964 1'b0;
	y_expected[3] = #4337 1'b1;
	y_expected[3] = #4100 1'b0;
	y_expected[3] = #12409 1'b1;
	y_expected[3] = #6400 1'b0;
	y_expected[3] = #3200 1'b1;
	# 1366;
	repeat(2)
	begin
		y_expected[3] = 1'b0;
		y_expected[3] = #1967 1'b1;
		# 1366;
	end
	y_expected[3] = 1'b0;
	y_expected[3] = #1677 1'b1;
	y_expected[3] = #7800 1'b0;
	y_expected[3] = #12237 1'b1;
	# 1499;
	repeat(2)
	begin
		y_expected[3] = 1'b0;
		y_expected[3] = #1834 1'b1;
		# 1499;
	end
	y_expected[3] = 1'b0;
	y_expected[3] = #6729 1'b1;
	y_expected[3] = #3100 1'b0;
	y_expected[3] = #6654 1'b1;
	y_expected[3] = #4300 1'b0;
	y_expected[3] = #5700 1'b1;
	y_expected[3] = #4300 1'b0;
	y_expected[3] = #860 1'b1;
	y_expected[3] = #4846 1'b0;
	y_expected[3] = #13600 1'b1;
	y_expected[3] = #1554 1'b0;
	y_expected[3] = #6776 1'b1;
	y_expected[3] = #9800 1'b0;
	y_expected[3] = #3424 1'b1;
	y_expected[3] = #3374 1'b0;
	y_expected[3] = #10800 1'b1;
	y_expected[3] = #7451 1'b0;
	y_expected[3] = #6600 1'b1;
	y_expected[3] = #1775 1'b0;
	y_expected[3] = #1521 1'b1;
	# 3266;
	repeat(2)
	begin
		y_expected[3] = 1'b0;
		y_expected[3] = #3400 1'b1;
		# 3266;
	end
	y_expected[3] = 1'b0;
	y_expected[3] = #2106 1'b1;
	# 2666;
	repeat(2)
	begin
		y_expected[3] = 1'b0;
		y_expected[3] = #4000 1'b1;
		# 2666;
	end
	y_expected[3] = 1'b0;
end 
// expected y[ 2 ]
initial
begin
	y_expected[2] = 1'b1;
	# 1277;
	repeat(2)
	begin
		y_expected[2] = 1'b0;
		y_expected[2] = #4133 1'b1;
		# 2533;
	end
	y_expected[2] = 1'b0;
	y_expected[2] = #4133 1'b1;
	y_expected[2] = #1258 1'b0;
	y_expected[2] = #3094 1'b1;
	# 2866;
	repeat(2)
	begin
		y_expected[2] = 1'b0;
		y_expected[2] = #3800 1'b1;
		# 2866;
	end
	y_expected[2] = 1'b0;
	y_expected[2] = #1019 1'b1;
	# 1666;
	repeat(2)
	begin
		y_expected[2] = 1'b0;
		y_expected[2] = #1667 1'b1;
		# 1666;
	end
	y_expected[2] = 1'b0;
	y_expected[2] = #4068 1'b1;
	y_expected[2] = #4600 1'b0;
	y_expected[2] = #5400 1'b1;
	y_expected[2] = #4600 1'b0;
	y_expected[2] = #2986 1'b1;
	# 2599;
	repeat(2)
	begin
		y_expected[2] = 1'b0;
		y_expected[2] = #4067 1'b1;
		# 2599;
	end
	y_expected[2] = 1'b0;
	y_expected[2] = #3772 1'b1;
	# 719;
	repeat(2)
	begin
		y_expected[2] = 1'b0;
		y_expected[2] = #3067 1'b1;
		# 3599;
	end
	y_expected[2] = 1'b0;
	y_expected[2] = #3067 1'b1;
	y_expected[2] = #8768 1'b0;
	y_expected[2] = #11400 1'b1;
	y_expected[2] = #3237 1'b0;
	y_expected[2] = #5400 1'b1;
	y_expected[2] = #6930 1'b0;
	y_expected[2] = #5600 1'b1;
	y_expected[2] = #1547 1'b0;
	y_expected[2] = #3606 1'b1;
	y_expected[2] = #3700 1'b0;
	y_expected[2] = #6300 1'b1;
	y_expected[2] = #3700 1'b0;
	y_expected[2] = #2694 1'b1;
	y_expected[2] = #125 1'b0;
	y_expected[2] = #2550 1'b1;
	y_expected[2] = #2450 1'b0;
	y_expected[2] = #2550 1'b1;
	y_expected[2] = #2325 1'b0;
	y_expected[2] = #2462 1'b1;
	y_expected[2] = #4700 1'b0;
	y_expected[2] = #5300 1'b1;
	y_expected[2] = #4700 1'b0;
	y_expected[2] = #3345 1'b1;
	y_expected[2] = #4300 1'b0;
	y_expected[2] = #5700 1'b1;
	y_expected[2] = #4300 1'b0;
	y_expected[2] = #7770 1'b1;
	y_expected[2] = #1850 1'b0;
	y_expected[2] = #3150 1'b1;
	y_expected[2] = #1850 1'b0;
	y_expected[2] = #896 1'b1;
	y_expected[2] = #2000 1'b0;
	y_expected[2] = #3000 1'b1;
	y_expected[2] = #2000 1'b0;
	y_expected[2] = #3419 1'b1;
	y_expected[2] = #1700 1'b0;
	y_expected[2] = #3300 1'b1;
	y_expected[2] = #1700 1'b0;
	y_expected[2] = #2558 1'b1;
	y_expected[2] = #1465 1'b0;
	y_expected[2] = #5000 1'b1;
	y_expected[2] = #5000 1'b0;
	y_expected[2] = #5000 1'b1;
	y_expected[2] = #3535 1'b0;
	y_expected[2] = #2831 1'b1;
	y_expected[2] = #6200 1'b0;
	y_expected[2] = #11742 1'b1;
	y_expected[2] = #2750 1'b0;
	y_expected[2] = #2250 1'b1;
	y_expected[2] = #2750 1'b0;
	y_expected[2] = #7445 1'b1;
	y_expected[2] = #9400 1'b0;
	y_expected[2] = #4632 1'b1;
	y_expected[2] = #2752 1'b0;
	y_expected[2] = #4000 1'b1;
	y_expected[2] = #6000 1'b0;
	y_expected[2] = #4000 1'b1;
	y_expected[2] = #5124 1'b0;
	y_expected[2] = #6600 1'b1;
	y_expected[2] = #3400 1'b0;
	y_expected[2] = #6600 1'b1;
	y_expected[2] = #1524 1'b0;
	y_expected[2] = #2535 1'b1;
	y_expected[2] = #1700 1'b0;
	y_expected[2] = #3300 1'b1;
	y_expected[2] = #1700 1'b0;
	y_expected[2] = #765 1'b1;
	# 913;
	repeat(2)
	begin
		y_expected[2] = 1'b0;
		y_expected[2] = #3600 1'b1;
		# 3066;
	end
	y_expected[2] = 1'b0;
	y_expected[2] = #3600 1'b1;
	y_expected[2] = #2155 1'b0;
	y_expected[2] = #1076 1'b1;
	# 1433;
	repeat(2)
	begin
		y_expected[2] = 1'b0;
		y_expected[2] = #1900 1'b1;
		# 1433;
	end
	y_expected[2] = 1'b0;
	y_expected[2] = #825 1'b1;
	y_expected[2] = #3542 1'b0;
	y_expected[2] = #6300 1'b1;
	y_expected[2] = #158 1'b0;
	y_expected[2] = #779 1'b1;
	y_expected[2] = #1900 1'b0;
	y_expected[2] = #3100 1'b1;
	y_expected[2] = #1900 1'b0;
	y_expected[2] = #3820 1'b1;
	# 2333;
	repeat(2)
	begin
		y_expected[2] = 1'b0;
		y_expected[2] = #4333 1'b1;
		# 2333;
	end
	y_expected[2] = 1'b0;
	y_expected[2] = #2836 1'b1;
	# 1114;
	repeat(2)
	begin
		y_expected[2] = 1'b0;
		y_expected[2] = #4000 1'b1;
		# 2666;
	end
	y_expected[2] = 1'b0;
	y_expected[2] = #4000 1'b1;
	y_expected[2] = #2005 1'b0;
	y_expected[2] = #2600 1'b1;
	y_expected[2] = #2400 1'b0;
	y_expected[2] = #2600 1'b1;
	y_expected[2] = #1949 1'b0;
	y_expected[2] = #1702 1'b1;
	# 1366;
	repeat(2)
	begin
		y_expected[2] = 1'b0;
		y_expected[2] = #1967 1'b1;
		# 1366;
	end
	y_expected[2] = 1'b0;
	y_expected[2] = #6133 1'b1;
	y_expected[2] = #3300 1'b0;
	y_expected[2] = #6700 1'b1;
	y_expected[2] = #3300 1'b0;
	y_expected[2] = #3416 1'b1;
	y_expected[2] = #4000 1'b0;
	y_expected[2] = #6000 1'b1;
	y_expected[2] = #4000 1'b0;
	y_expected[2] = #4302 1'b1;
	y_expected[2] = #2850 1'b0;
	y_expected[2] = #2150 1'b1;
	y_expected[2] = #2850 1'b0;
	y_expected[2] = #1265 1'b1;
	# 2746;
	repeat(2)
	begin
		y_expected[2] = 1'b0;
		y_expected[2] = #3467 1'b1;
		# 3199;
	end
	y_expected[2] = 1'b0;
	y_expected[2] = #3467 1'b1;
	y_expected[2] = #455 1'b0;
	y_expected[2] = #4044 1'b1;
	# 1999;
	repeat(2)
	begin
		y_expected[2] = 1'b0;
		y_expected[2] = #4667 1'b1;
		# 1999;
	end
	y_expected[2] = 1'b0;
	y_expected[2] = #625 1'b1;
	y_expected[2] = #2804 1'b0;
	y_expected[2] = #5100 1'b1;
	y_expected[2] = #4900 1'b0;
	y_expected[2] = #5100 1'b1;
	y_expected[2] = #2096 1'b0;
	y_expected[2] = #4559 1'b1;
	y_expected[2] = #4000 1'b0;
	y_expected[2] = #6000 1'b1;
	y_expected[2] = #4000 1'b0;
	y_expected[2] = #1611 1'b1;
	y_expected[2] = #11400 1'b0;
	y_expected[2] = #8430 1'b1;
	# 390;
	repeat(2)
	begin
		y_expected[2] = 1'b0;
		y_expected[2] = #2234 1'b1;
		# 1099;
	end
	y_expected[2] = 1'b0;
	y_expected[2] = #2234 1'b1;
	y_expected[2] = #1843 1'b0;
	y_expected[2] = #1967 1'b1;
	y_expected[2] = #1366 1'b0;
	y_expected[2] = #1967 1'b1;
	y_expected[2] = #1366 1'b0;
	y_expected[2] = #1967 1'b1;
	y_expected[2] = #234 1'b0;
	y_expected[2] = #530 1'b1;
	# 2999;
	repeat(2)
	begin
		y_expected[2] = 1'b0;
		y_expected[2] = #3667 1'b1;
		# 2999;
	end
	y_expected[2] = 1'b0;
	y_expected[2] = #3139 1'b1;
	# 739;
	repeat(2)
	begin
		y_expected[2] = 1'b0;
		y_expected[2] = #3134 1'b1;
		# 3532;
	end
	y_expected[2] = 1'b0;
	y_expected[2] = #3134 1'b1;
	y_expected[2] = #2795 1'b0;
	y_expected[2] = #6680 1'b1;
	y_expected[2] = #10400 1'b0;
	y_expected[2] = #2920 1'b1;
	y_expected[2] = #1463 1'b0;
	y_expected[2] = #3450 1'b1;
	y_expected[2] = #1550 1'b0;
	y_expected[2] = #3450 1'b1;
	y_expected[2] = #1256 1'b0;
	y_expected[2] = #2000 1'b1;
	y_expected[2] = #1333 1'b0;
	y_expected[2] = #2000 1'b1;
	y_expected[2] = #1333 1'b0;
	y_expected[2] = #2000 1'b1;
	y_expected[2] = #165 1'b0;
	y_expected[2] = #3437 1'b1;
	y_expected[2] = #3700 1'b0;
	y_expected[2] = #6300 1'b1;
	y_expected[2] = #3700 1'b0;
	y_expected[2] = #8686 1'b1;
	y_expected[2] = #3500 1'b0;
	y_expected[2] = #4812 1'b1;
	y_expected[2] = #8000 1'b0;
	y_expected[2] = #8170 1'b1;
	y_expected[2] = #3100 1'b0;
	y_expected[2] = #6900 1'b1;
	y_expected[2] = #3100 1'b0;
	y_expected[2] = #6595 1'b1;
	y_expected[2] = #522 1'b0;
	y_expected[2] = #2450 1'b1;
	y_expected[2] = #2550 1'b0;
	y_expected[2] = #2450 1'b1;
	y_expected[2] = #4512 1'b0;
	y_expected[2] = #5700 1'b1;
	y_expected[2] = #4300 1'b0;
	y_expected[2] = #5700 1'b1;
	y_expected[2] = #2774 1'b0;
	y_expected[2] = #1734 1'b1;
	y_expected[2] = #1599 1'b0;
	y_expected[2] = #1734 1'b1;
	y_expected[2] = #1599 1'b0;
	y_expected[2] = #1734 1'b1;
	y_expected[2] = #2147 1'b0;
	y_expected[2] = #12000 1'b1;
	y_expected[2] = #8266 1'b0;
	y_expected[2] = #5700 1'b1;
	y_expected[2] = #2529 1'b0;
	y_expected[2] = #1400 1'b1;
	y_expected[2] = #4800 1'b0;
	y_expected[2] = #5200 1'b1;
	y_expected[2] = #4800 1'b0;
	y_expected[2] = #3800 1'b1;
	y_expected[2] = #2418 1'b0;
	y_expected[2] = #5400 1'b1;
	y_expected[2] = #4600 1'b0;
	y_expected[2] = #5400 1'b1;
	y_expected[2] = #2182 1'b0;
	y_expected[2] = #1167 1'b1;
	# 1499;
	repeat(2)
	begin
		y_expected[2] = 1'b0;
		y_expected[2] = #1834 1'b1;
		# 1499;
	end
	y_expected[2] = 1'b0;
	y_expected[2] = #668 1'b1;
	# 607;
	repeat(2)
	begin
		y_expected[2] = 1'b0;
		y_expected[2] = #2000 1'b1;
		# 1333;
	end
	y_expected[2] = 1'b0;
	y_expected[2] = #2000 1'b1;
	y_expected[2] = #727 1'b0;
	y_expected[2] = #3884 1'b1;
	y_expected[2] = #11600 1'b0;
	y_expected[2] = #4516 1'b1;
	y_expected[2] = #1423 1'b0;
	y_expected[2] = #6800 1'b1;
	y_expected[2] = #1777 1'b0;
	y_expected[2] = #4078 1'b1;
	y_expected[2] = #4200 1'b0;
	y_expected[2] = #2166 1'b1;
	y_expected[2] = #1700 1'b0;
	y_expected[2] = #3300 1'b1;
	y_expected[2] = #1700 1'b0;
	y_expected[2] = #2856 1'b1;
	# 1149;
	repeat(2)
	begin
		y_expected[2] = 1'b0;
		y_expected[2] = #3533 1'b1;
		# 3133;
	end
	y_expected[2] = 1'b0;
	y_expected[2] = #3533 1'b1;
end 
// expected y[ 1 ]
initial
begin
	y_expected[1] = 1'b1;
	y_expected[1] = #2777 1'b0;
	y_expected[1] = #4800 1'b1;
	y_expected[1] = #5200 1'b0;
	y_expected[1] = #4800 1'b1;
	y_expected[1] = #2952 1'b0;
	y_expected[1] = #3933 1'b1;
	y_expected[1] = #2733 1'b0;
	y_expected[1] = #3933 1'b1;
	y_expected[1] = #2733 1'b0;
	y_expected[1] = #3933 1'b1;
	y_expected[1] = #5772 1'b0;
	y_expected[1] = #12800 1'b1;
	y_expected[1] = #7865 1'b0;
	y_expected[1] = #5400 1'b1;
	y_expected[1] = #4600 1'b0;
	y_expected[1] = #5400 1'b1;
	y_expected[1] = #8021 1'b0;
	y_expected[1] = #9800 1'b1;
	y_expected[1] = #4309 1'b0;
	y_expected[1] = #2500 1'b1;
	y_expected[1] = #2500 1'b0;
	y_expected[1] = #2500 1'b1;
	y_expected[1] = #739 1'b0;
	y_expected[1] = #839 1'b1;
	y_expected[1] = #9800 1'b0;
	y_expected[1] = #9361 1'b1;
	y_expected[1] = #9209 1'b0;
	y_expected[1] = #8400 1'b1;
	y_expected[1] = #7708 1'b0;
	y_expected[1] = #10600 1'b1;
	y_expected[1] = #4083 1'b0;
	y_expected[1] = #3622 1'b1;
	y_expected[1] = #4700 1'b0;
	y_expected[1] = #8231 1'b1;
	y_expected[1] = #3400 1'b0;
	y_expected[1] = #47 1'b1;
	y_expected[1] = #3439 1'b0;
	y_expected[1] = #12600 1'b1;
	y_expected[1] = #3961 1'b0;
	y_expected[1] = #799 1'b1;
	# 3266;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #3400 1'b1;
		# 3266;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #2603 1'b1;
	y_expected[1] = #3249 1'b0;
	y_expected[1] = #5200 1'b1;
	y_expected[1] = #2528 1'b0;
	y_expected[1] = #3450 1'b1;
	y_expected[1] = #1550 1'b0;
	y_expected[1] = #3450 1'b1;
	y_expected[1] = #573 1'b0;
	y_expected[1] = #2361 1'b1;
	y_expected[1] = #4100 1'b0;
	y_expected[1] = #5900 1'b1;
	y_expected[1] = #4100 1'b0;
	y_expected[1] = #5825 1'b1;
	# 3932;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #2734 1'b1;
		# 3932;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #2779 1'b1;
	y_expected[1] = #1650 1'b0;
	y_expected[1] = #3350 1'b1;
	y_expected[1] = #1650 1'b0;
	y_expected[1] = #1021 1'b1;
	y_expected[1] = #1627 1'b0;
	y_expected[1] = #2750 1'b1;
	y_expected[1] = #2250 1'b0;
	y_expected[1] = #2750 1'b1;
	y_expected[1] = #1160 1'b0;
	y_expected[1] = #3300 1'b1;
	y_expected[1] = #1700 1'b0;
	y_expected[1] = #3300 1'b1;
	y_expected[1] = #1163 1'b0;
	y_expected[1] = #3831 1'b1;
	y_expected[1] = #4200 1'b0;
	y_expected[1] = #2268 1'b1;
	# 1433;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #1900 1'b1;
		# 1433;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #3928 1'b1;
	# 3599;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #3067 1'b1;
		# 3599;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #3009 1'b1;
	# 1066;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #2267 1'b1;
		# 1066;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #2 1'b1;
	y_expected[1] = #6859 1'b0;
	y_expected[1] = #10000 1'b1;
	y_expected[1] = #8476 1'b0;
	y_expected[1] = #4100 1'b1;
	y_expected[1] = #565 1'b0;
	y_expected[1] = #523 1'b1;
	# 3999;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #2667 1'b1;
		# 3999;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #4965 1'b1;
	y_expected[1] = #1700 1'b0;
	y_expected[1] = #3300 1'b1;
	y_expected[1] = #1700 1'b0;
	y_expected[1] = #481 1'b1;
	y_expected[1] = #486 1'b0;
	y_expected[1] = #6100 1'b1;
	y_expected[1] = #3414 1'b0;
	y_expected[1] = #2746 1'b1;
	# 2266;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #4400 1'b1;
		# 2266;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #3903 1'b1;
	# 3999;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #2667 1'b1;
		# 3999;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #422 1'b1;
	y_expected[1] = #707 1'b0;
	y_expected[1] = #6900 1'b1;
	y_expected[1] = #3100 1'b0;
	y_expected[1] = #6900 1'b1;
	y_expected[1] = #3966 1'b0;
	y_expected[1] = #7000 1'b1;
	y_expected[1] = #2674 1'b0;
	y_expected[1] = #1334 1'b1;
	y_expected[1] = #1999 1'b0;
	y_expected[1] = #1334 1'b1;
	y_expected[1] = #1999 1'b0;
	y_expected[1] = #1334 1'b1;
	y_expected[1] = #753 1'b0;
	y_expected[1] = #1993 1'b1;
	y_expected[1] = #1650 1'b0;
	y_expected[1] = #3350 1'b1;
	y_expected[1] = #1650 1'b0;
	y_expected[1] = #1357 1'b1;
	y_expected[1] = #5401 1'b0;
	y_expected[1] = #4300 1'b1;
	y_expected[1] = #5700 1'b0;
	y_expected[1] = #4300 1'b1;
	y_expected[1] = #299 1'b0;
	y_expected[1] = #1346 1'b1;
	# 3399;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #3267 1'b1;
		# 3399;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #1923 1'b1;
	y_expected[1] = #2459 1'b0;
	y_expected[1] = #5600 1'b1;
	y_expected[1] = #4400 1'b0;
	y_expected[1] = #5600 1'b1;
	y_expected[1] = #1941 1'b0;
	y_expected[1] = #1753 1'b1;
	y_expected[1] = #3900 1'b0;
	y_expected[1] = #5212 1'b1;
	# 1333;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #2000 1'b1;
		# 1333;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #2997 1'b1;
	# 1366;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #1967 1'b1;
		# 1366;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #2091 1'b1;
	# 1299;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #2034 1'b1;
		# 1299;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #51 1'b1;
	y_expected[1] = #3104 1'b0;
	y_expected[1] = #5500 1'b1;
	y_expected[1] = #4500 1'b0;
	y_expected[1] = #5500 1'b1;
	y_expected[1] = #5618 1'b0;
	y_expected[1] = #11200 1'b1;
	y_expected[1] = #4578 1'b0;
	y_expected[1] = #1492 1'b1;
	# 1166;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #2167 1'b1;
		# 1166;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #676 1'b1;
	y_expected[1] = #33 1'b0;
	y_expected[1] = #3150 1'b1;
	y_expected[1] = #1850 1'b0;
	y_expected[1] = #3150 1'b1;
	y_expected[1] = #1817 1'b0;
	y_expected[1] = #5201 1'b1;
	y_expected[1] = #6200 1'b0;
	y_expected[1] = #8599 1'b1;
	# 2944;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #2934 1'b1;
		# 3732;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #2934 1'b1;
	y_expected[1] = #790 1'b0;
	y_expected[1] = #4986 1'b1;
	y_expected[1] = #4900 1'b0;
	y_expected[1] = #114 1'b1;
	# 1225;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #1634 1'b1;
		# 1699;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #1634 1'b1;
	y_expected[1] = #475 1'b0;
	y_expected[1] = #165 1'b1;
	y_expected[1] = #2000 1'b0;
	y_expected[1] = #3000 1'b1;
	y_expected[1] = #2000 1'b0;
	y_expected[1] = #2835 1'b1;
	# 846;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #1600 1'b1;
		# 1733;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #1600 1'b1;
	y_expected[1] = #1044 1'b0;
	y_expected[1] = #3000 1'b1;
	y_expected[1] = #3666 1'b0;
	y_expected[1] = #3000 1'b1;
	y_expected[1] = #3666 1'b0;
	y_expected[1] = #3000 1'b1;
	y_expected[1] = #3765 1'b0;
	y_expected[1] = #2234 1'b1;
	y_expected[1] = #1099 1'b0;
	y_expected[1] = #2234 1'b1;
	y_expected[1] = #1099 1'b0;
	y_expected[1] = #2234 1'b1;
	y_expected[1] = #1763 1'b0;
	y_expected[1] = #1400 1'b1;
	y_expected[1] = #1933 1'b0;
	y_expected[1] = #1400 1'b1;
	y_expected[1] = #1933 1'b0;
	y_expected[1] = #1400 1'b1;
	y_expected[1] = #1018 1'b0;
	y_expected[1] = #1161 1'b1;
	# 1333;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #2000 1'b1;
		# 1333;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #9381 1'b1;
	y_expected[1] = #6800 1'b0;
	y_expected[1] = #4659 1'b1;
	y_expected[1] = #1461 1'b0;
	y_expected[1] = #5000 1'b1;
	y_expected[1] = #3539 1'b0;
	y_expected[1] = #1383 1'b1;
	y_expected[1] = #5600 1'b0;
	y_expected[1] = #4400 1'b1;
	y_expected[1] = #5600 1'b0;
	y_expected[1] = #3017 1'b1;
	# 23;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #1900 1'b1;
		# 1433;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #1900 1'b1;
	y_expected[1] = #1988 1'b0;
	y_expected[1] = #3800 1'b1;
	y_expected[1] = #2866 1'b0;
	y_expected[1] = #3800 1'b1;
	y_expected[1] = #2866 1'b0;
	y_expected[1] = #3800 1'b1;
	y_expected[1] = #4538 1'b0;
	y_expected[1] = #5900 1'b1;
	y_expected[1] = #2013 1'b0;
	y_expected[1] = #2000 1'b1;
	y_expected[1] = #1333 1'b0;
	y_expected[1] = #2000 1'b1;
	y_expected[1] = #1333 1'b0;
	y_expected[1] = #2000 1'b1;
	y_expected[1] = #3113 1'b0;
	y_expected[1] = #3933 1'b1;
	y_expected[1] = #2733 1'b0;
	y_expected[1] = #3933 1'b1;
	y_expected[1] = #2733 1'b0;
	y_expected[1] = #3933 1'b1;
	y_expected[1] = #9941 1'b0;
	y_expected[1] = #10800 1'b1;
	y_expected[1] = #333 1'b0;
	y_expected[1] = #2000 1'b1;
	y_expected[1] = #1333 1'b0;
	y_expected[1] = #2000 1'b1;
	y_expected[1] = #1333 1'b0;
	y_expected[1] = #2000 1'b1;
	y_expected[1] = #1056 1'b0;
	y_expected[1] = #1847 1'b1;
	y_expected[1] = #2050 1'b0;
	y_expected[1] = #2950 1'b1;
	y_expected[1] = #2050 1'b0;
	y_expected[1] = #1103 1'b1;
	# 868;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #1834 1'b1;
		# 1499;
	end
	y_expected[1] = 1'b0;
	y_expected[1] = #1834 1'b1;
	y_expected[1] = #632 1'b0;
	y_expected[1] = #726 1'b1;
	# 1733;
	repeat(2)
	begin
		y_expected[1] = 1'b0;
		y_expected[1] = #1600 1'b1;
		# 1733;
	end
	y_expected[1] = 1'b0;
end 
// expected y[ 0 ]
initial
begin
	y_expected[0] = 1'b0;
	y_expected[0] = #3454 1'b1;
	y_expected[0] = #3800 1'b0;
	y_expected[0] = #6200 1'b1;
	y_expected[0] = #3800 1'b0;
	y_expected[0] = #15318 1'b1;
	y_expected[0] = #6600 1'b0;
	y_expected[0] = #828 1'b1;
	y_expected[0] = #5643 1'b0;
	y_expected[0] = #11800 1'b1;
	y_expected[0] = #2557 1'b0;
	y_expected[0] = #12626 1'b1;
	y_expected[0] = #6200 1'b0;
	y_expected[0] = #3723 1'b1;
	y_expected[0] = #3000 1'b0;
	y_expected[0] = #5269 1'b1;
	# 1933;
	repeat(2)
	begin
		y_expected[0] = 1'b0;
		y_expected[0] = #1400 1'b1;
		# 1933;
	end
	y_expected[0] = 1'b0;
	y_expected[0] = #583 1'b1;
	y_expected[0] = #183 1'b0;
	y_expected[0] = #3250 1'b1;
	y_expected[0] = #1750 1'b0;
	y_expected[0] = #3250 1'b1;
	y_expected[0] = #3319 1'b0;
	y_expected[0] = #3400 1'b1;
	y_expected[0] = #3266 1'b0;
	y_expected[0] = #3400 1'b1;
	y_expected[0] = #3266 1'b0;
	y_expected[0] = #3400 1'b1;
	y_expected[0] = #2407 1'b0;
	y_expected[0] = #11000 1'b1;
	y_expected[0] = #8109 1'b0;
	y_expected[0] = #672 1'b1;
	# 1966;
	repeat(2)
	begin
		y_expected[0] = 1'b0;
		y_expected[0] = #1367 1'b1;
		# 1966;
	end
	y_expected[0] = 1'b0;
	y_expected[0] = #696 1'b1;
	y_expected[0] = #1748 1'b0;
	y_expected[0] = #2250 1'b1;
	y_expected[0] = #2750 1'b0;
	y_expected[0] = #2250 1'b1;
	y_expected[0] = #3089 1'b0;
	y_expected[0] = #4600 1'b1;
	y_expected[0] = #5400 1'b0;
	y_expected[0] = #4600 1'b1;
	y_expected[0] = #3313 1'b0;
	y_expected[0] = #11708 1'b1;
	y_expected[0] = #7800 1'b0;
	y_expected[0] = #492 1'b1;
	y_expected[0] = #1927 1'b0;
	y_expected[0] = #11400 1'b1;
	y_expected[0] = #6673 1'b0;
	y_expected[0] = #3358 1'b1;
	y_expected[0] = #10800 1'b0;
	y_expected[0] = #5842 1'b1;
	y_expected[0] = #1810 1'b0;
	y_expected[0] = #6000 1'b1;
	y_expected[0] = #3627 1'b0;
	y_expected[0] = #5400 1'b1;
	y_expected[0] = #4600 1'b0;
	y_expected[0] = #5400 1'b1;
	y_expected[0] = #3163 1'b0;
	y_expected[0] = #1075 1'b1;
	y_expected[0] = #11000 1'b0;
	y_expected[0] = #7925 1'b1;
	y_expected[0] = #1668 1'b0;
	y_expected[0] = #9400 1'b1;
	y_expected[0] = #8932 1'b0;
	y_expected[0] = #4440 1'b1;
	y_expected[0] = #9600 1'b0;
	y_expected[0] = #5960 1'b1;
	y_expected[0] = #2076 1'b0;
	y_expected[0] = #6100 1'b1;
	y_expected[0] = #3900 1'b0;
	y_expected[0] = #6100 1'b1;
	y_expected[0] = #1824 1'b0;
	y_expected[0] = #1452 1'b1;
	y_expected[0] = #3000 1'b0;
	y_expected[0] = #5548 1'b1;
	# 1079;
	repeat(2)
	begin
		y_expected[0] = 1'b0;
		y_expected[0] = #2034 1'b1;
		# 1299;
	end
	y_expected[0] = 1'b0;
	y_expected[0] = #2034 1'b1;
	y_expected[0] = #858 1'b0;
	y_expected[0] = #5200 1'b1;
	y_expected[0] = #4800 1'b0;
	y_expected[0] = #5200 1'b1;
	y_expected[0] = #11288 1'b0;
	y_expected[0] = #11800 1'b1;
	y_expected[0] = #5290 1'b0;
	y_expected[0] = #10400 1'b1;
	y_expected[0] = #7636 1'b0;
	y_expected[0] = #4400 1'b1;
	y_expected[0] = #3349 1'b0;
	y_expected[0] = #1603 1'b1;
	y_expected[0] = #2300 1'b0;
	y_expected[0] = #2700 1'b1;
	y_expected[0] = #2300 1'b0;
	y_expected[0] = #1097 1'b1;
	# 303;
	repeat(2)
	begin
		y_expected[0] = 1'b0;
		y_expected[0] = #1700 1'b1;
		# 1633;
	end
	y_expected[0] = 1'b0;
	y_expected[0] = #1700 1'b1;
	y_expected[0] = #3755 1'b0;
	y_expected[0] = #6600 1'b1;
	y_expected[0] = #2359 1'b0;
	y_expected[0] = #6900 1'b1;
	y_expected[0] = #3100 1'b0;
	y_expected[0] = #6900 1'b1;
	y_expected[0] = #1717 1'b0;
	y_expected[0] = #335 1'b1;
	# 3866;
	repeat(2)
	begin
		y_expected[0] = 1'b0;
		y_expected[0] = #2800 1'b1;
		# 3866;
	end
	y_expected[0] = 1'b0;
	y_expected[0] = #5949 1'b1;
	y_expected[0] = #4800 1'b0;
	y_expected[0] = #5200 1'b1;
	y_expected[0] = #4800 1'b0;
	y_expected[0] = #1718 1'b1;
	y_expected[0] = #3757 1'b0;
	y_expected[0] = #4300 1'b1;
	y_expected[0] = #1943 1'b0;
	y_expected[0] = #3030 1'b1;
	y_expected[0] = #4500 1'b0;
	y_expected[0] = #2470 1'b1;
	# 502;
	repeat(2)
	begin
		y_expected[0] = 1'b0;
		y_expected[0] = #1667 1'b1;
		# 1666;
	end
	y_expected[0] = 1'b0;
	y_expected[0] = #1667 1'b1;
	y_expected[0] = #1165 1'b0;
	y_expected[0] = #1120 1'b1;
	y_expected[0] = #5600 1'b0;
	y_expected[0] = #3280 1'b1;
	y_expected[0] = #11450 1'b0;
	y_expected[0] = #8400 1'b1;
	y_expected[0] = #150 1'b0;
	y_expected[0] = #1605 1'b1;
	y_expected[0] = #2700 1'b0;
	y_expected[0] = #2300 1'b1;
	y_expected[0] = #2700 1'b0;
	y_expected[0] = #2644 1'b1;
	y_expected[0] = #2800 1'b0;
	y_expected[0] = #2200 1'b1;
	y_expected[0] = #2800 1'b0;
	y_expected[0] = #4308 1'b1;
	y_expected[0] = #3900 1'b0;
	y_expected[0] = #6100 1'b1;
	y_expected[0] = #3900 1'b0;
	y_expected[0] = #2822 1'b1;
	# 1466;
	repeat(2)
	begin
		y_expected[0] = 1'b0;
		y_expected[0] = #1867 1'b1;
		# 1466;
	end
	y_expected[0] = 1'b0;
	y_expected[0] = #1089 1'b1;
	y_expected[0] = #1401 1'b0;
	y_expected[0] = #4800 1'b1;
	y_expected[0] = #5200 1'b0;
	y_expected[0] = #4800 1'b1;
	y_expected[0] = #3799 1'b0;
	y_expected[0] = #32 1'b1;
	# 1733;
	repeat(2)
	begin
		y_expected[0] = 1'b0;
		y_expected[0] = #1600 1'b1;
		# 1733;
	end
	y_expected[0] = 1'b0;
	y_expected[0] = #1569 1'b1;
	# 429;
	repeat(2)
	begin
		y_expected[0] = 1'b0;
		y_expected[0] = #3800 1'b1;
		# 2866;
	end
	y_expected[0] = 1'b0;
	y_expected[0] = #3800 1'b1;
	y_expected[0] = #2582 1'b0;
	y_expected[0] = #3067 1'b1;
	y_expected[0] = #3599 1'b0;
	y_expected[0] = #3067 1'b1;
	y_expected[0] = #3599 1'b0;
	y_expected[0] = #3067 1'b1;
	y_expected[0] = #4690 1'b0;
	y_expected[0] = #3467 1'b1;
	y_expected[0] = #3199 1'b0;
	y_expected[0] = #3467 1'b1;
	y_expected[0] = #3199 1'b0;
	y_expected[0] = #3467 1'b1;
	y_expected[0] = #1969 1'b0;
	y_expected[0] = #2266 1'b1;
	y_expected[0] = #8600 1'b0;
	y_expected[0] = #9134 1'b1;
	y_expected[0] = #2990 1'b0;
	y_expected[0] = #6000 1'b1;
	y_expected[0] = #4000 1'b0;
	y_expected[0] = #6000 1'b1;
	y_expected[0] = #1010 1'b0;
	y_expected[0] = #3532 1'b1;
	y_expected[0] = #5100 1'b0;
	y_expected[0] = #4900 1'b1;
	y_expected[0] = #5100 1'b0;
	y_expected[0] = #2279 1'b1;
	y_expected[0] = #1800 1'b0;
	y_expected[0] = #3200 1'b1;
	y_expected[0] = #1800 1'b0;
	y_expected[0] = #3159 1'b1;
	# 1033;
	repeat(2)
	begin
		y_expected[0] = 1'b0;
		y_expected[0] = #2300 1'b1;
		# 1033;
	end
	y_expected[0] = 1'b0;
	y_expected[0] = #3381 1'b1;
	# 2933;
	repeat(2)
	begin
		y_expected[0] = 1'b0;
		y_expected[0] = #3733 1'b1;
		# 2933;
	end
	y_expected[0] = 1'b0;
	y_expected[0] = #3373 1'b1;
	# 1233;
	repeat(2)
	begin
		y_expected[0] = 1'b0;
		y_expected[0] = #2100 1'b1;
		# 1233;
	end
	y_expected[0] = 1'b0;
	y_expected[0] = #513 1'b1;
	# 671;
	repeat(2)
	begin
		y_expected[0] = 1'b0;
		y_expected[0] = #2000 1'b1;
		# 1333;
	end
	y_expected[0] = 1'b0;
	y_expected[0] = #2000 1'b1;
	y_expected[0] = #4742 1'b0;
	y_expected[0] = #13600 1'b1;
	y_expected[0] = #2321 1'b0;
	y_expected[0] = #1946 1'b1;
	# 2066;
	repeat(2)
	begin
		y_expected[0] = 1'b0;
		y_expected[0] = #4600 1'b1;
		# 2066;
	end
	y_expected[0] = 1'b0;
	y_expected[0] = #4962 1'b1;
	y_expected[0] = #5900 1'b0;
	y_expected[0] = #4100 1'b1;
	y_expected[0] = #5900 1'b0;
	y_expected[0] = #7331 1'b1;
	y_expected[0] = #4100 1'b0;
	y_expected[0] = #5900 1'b1;
	y_expected[0] = #4100 1'b0;
	y_expected[0] = #363 1'b1;
	y_expected[0] = #2557 1'b0;
	y_expected[0] = #11600 1'b1;
	y_expected[0] = #5990 1'b0;
	y_expected[0] = #6700 1'b1;
	y_expected[0] = #3153 1'b0;
	y_expected[0] = #817 1'b1;
	# 1533;
	repeat(2)
	begin
		y_expected[0] = 1'b0;
		y_expected[0] = #1800 1'b1;
		# 1533;
	end
	y_expected[0] = 1'b0;
	y_expected[0] = #1834 1'b1;
	y_expected[0] = #1850 1'b0;
	y_expected[0] = #3150 1'b1;
	y_expected[0] = #1850 1'b0;
	y_expected[0] = #2300 1'b1;
	y_expected[0] = #5020 1'b0;
	y_expected[0] = #4500 1'b1;
end 
// expected z[ 7 ]
initial
begin
	z_expected[7] = 1'bX;
end 
// expected z[ 6 ]
initial
begin
	z_expected[6] = 1'bX;
end 
// expected z[ 5 ]
initial
begin
	z_expected[5] = 1'bX;
end 
// expected z[ 4 ]
initial
begin
	z_expected[4] = 1'bX;
end 
// expected z[ 3 ]
initial
begin
	z_expected[3] = 1'bX;
end 
// expected z[ 2 ]
initial
begin
	z_expected[2] = 1'bX;
end 
// expected z[ 1 ]
initial
begin
	z_expected[1] = 1'bX;
end 
// expected z[ 0 ]
initial
begin
	z_expected[0] = 1'bX;
end 
// generate trigger
always @(enable_expected or enable or rez_expected or rez or x_expected or x or y_expected or y or z_expected or z)
begin
	trigger <= ~trigger;
end

always @(posedge sampler_rx or negedge sampler_rx)
begin
`ifdef debug_tbench
	$display("Scanning pattern %d @time = %t",i,$realtime );
	i = i + 1;
	$display("| expected enable = %b | expected rez = %b | expected x = %b | expected y = %b | expected z = %b | ",enable_expected_prev,rez_expected_prev,x_expected_prev,y_expected_prev,z_expected_prev);
	$display("| real enable = %b | real rez = %b | real x = %b | real y = %b | real z = %b | ",enable_prev,rez_prev,x_prev,y_prev,z_prev);
`endif
	if (
		( enable_expected_prev !== 1'bx ) && ( enable_prev !== enable_expected_prev )
		&& ((enable_expected_prev !== last_enable_exp) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port enable :: @time = %t",  $realtime);
		$display ("     Expected value = %b", enable_expected_prev);
		$display ("     Real value = %b", enable_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_enable_exp = enable_expected_prev;
	end
	if (
		( rez_expected_prev[0] !== 1'bx ) && ( rez_prev[0] !== rez_expected_prev[0] )
		&& ((rez_expected_prev[0] !== last_rez_exp[0]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port rez[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", rez_expected_prev);
		$display ("     Real value = %b", rez_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_rez_exp[0] = rez_expected_prev[0];
	end
	if (
		( rez_expected_prev[1] !== 1'bx ) && ( rez_prev[1] !== rez_expected_prev[1] )
		&& ((rez_expected_prev[1] !== last_rez_exp[1]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port rez[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", rez_expected_prev);
		$display ("     Real value = %b", rez_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_rez_exp[1] = rez_expected_prev[1];
	end
	if (
		( rez_expected_prev[2] !== 1'bx ) && ( rez_prev[2] !== rez_expected_prev[2] )
		&& ((rez_expected_prev[2] !== last_rez_exp[2]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port rez[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", rez_expected_prev);
		$display ("     Real value = %b", rez_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_rez_exp[2] = rez_expected_prev[2];
	end
	if (
		( rez_expected_prev[3] !== 1'bx ) && ( rez_prev[3] !== rez_expected_prev[3] )
		&& ((rez_expected_prev[3] !== last_rez_exp[3]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port rez[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", rez_expected_prev);
		$display ("     Real value = %b", rez_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_rez_exp[3] = rez_expected_prev[3];
	end
	if (
		( rez_expected_prev[4] !== 1'bx ) && ( rez_prev[4] !== rez_expected_prev[4] )
		&& ((rez_expected_prev[4] !== last_rez_exp[4]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port rez[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", rez_expected_prev);
		$display ("     Real value = %b", rez_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_rez_exp[4] = rez_expected_prev[4];
	end
	if (
		( rez_expected_prev[5] !== 1'bx ) && ( rez_prev[5] !== rez_expected_prev[5] )
		&& ((rez_expected_prev[5] !== last_rez_exp[5]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port rez[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", rez_expected_prev);
		$display ("     Real value = %b", rez_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_rez_exp[5] = rez_expected_prev[5];
	end
	if (
		( rez_expected_prev[6] !== 1'bx ) && ( rez_prev[6] !== rez_expected_prev[6] )
		&& ((rez_expected_prev[6] !== last_rez_exp[6]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port rez[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", rez_expected_prev);
		$display ("     Real value = %b", rez_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_rez_exp[6] = rez_expected_prev[6];
	end
	if (
		( rez_expected_prev[7] !== 1'bx ) && ( rez_prev[7] !== rez_expected_prev[7] )
		&& ((rez_expected_prev[7] !== last_rez_exp[7]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port rez[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", rez_expected_prev);
		$display ("     Real value = %b", rez_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_rez_exp[7] = rez_expected_prev[7];
	end
	if (
		( x_expected_prev[0] !== 1'bx ) && ( x_prev[0] !== x_expected_prev[0] )
		&& ((x_expected_prev[0] !== last_x_exp[0]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port x[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", x_expected_prev);
		$display ("     Real value = %b", x_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_x_exp[0] = x_expected_prev[0];
	end
	if (
		( x_expected_prev[1] !== 1'bx ) && ( x_prev[1] !== x_expected_prev[1] )
		&& ((x_expected_prev[1] !== last_x_exp[1]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port x[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", x_expected_prev);
		$display ("     Real value = %b", x_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_x_exp[1] = x_expected_prev[1];
	end
	if (
		( x_expected_prev[2] !== 1'bx ) && ( x_prev[2] !== x_expected_prev[2] )
		&& ((x_expected_prev[2] !== last_x_exp[2]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port x[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", x_expected_prev);
		$display ("     Real value = %b", x_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_x_exp[2] = x_expected_prev[2];
	end
	if (
		( x_expected_prev[3] !== 1'bx ) && ( x_prev[3] !== x_expected_prev[3] )
		&& ((x_expected_prev[3] !== last_x_exp[3]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port x[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", x_expected_prev);
		$display ("     Real value = %b", x_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_x_exp[3] = x_expected_prev[3];
	end
	if (
		( y_expected_prev[0] !== 1'bx ) && ( y_prev[0] !== y_expected_prev[0] )
		&& ((y_expected_prev[0] !== last_y_exp[0]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port y[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", y_expected_prev);
		$display ("     Real value = %b", y_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_y_exp[0] = y_expected_prev[0];
	end
	if (
		( y_expected_prev[1] !== 1'bx ) && ( y_prev[1] !== y_expected_prev[1] )
		&& ((y_expected_prev[1] !== last_y_exp[1]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port y[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", y_expected_prev);
		$display ("     Real value = %b", y_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_y_exp[1] = y_expected_prev[1];
	end
	if (
		( y_expected_prev[2] !== 1'bx ) && ( y_prev[2] !== y_expected_prev[2] )
		&& ((y_expected_prev[2] !== last_y_exp[2]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port y[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", y_expected_prev);
		$display ("     Real value = %b", y_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_y_exp[2] = y_expected_prev[2];
	end
	if (
		( y_expected_prev[3] !== 1'bx ) && ( y_prev[3] !== y_expected_prev[3] )
		&& ((y_expected_prev[3] !== last_y_exp[3]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port y[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", y_expected_prev);
		$display ("     Real value = %b", y_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_y_exp[3] = y_expected_prev[3];
	end
	if (
		( z_expected_prev[0] !== 1'bx ) && ( z_prev[0] !== z_expected_prev[0] )
		&& ((z_expected_prev[0] !== last_z_exp[0]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port z[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", z_expected_prev);
		$display ("     Real value = %b", z_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_z_exp[0] = z_expected_prev[0];
	end
	if (
		( z_expected_prev[1] !== 1'bx ) && ( z_prev[1] !== z_expected_prev[1] )
		&& ((z_expected_prev[1] !== last_z_exp[1]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port z[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", z_expected_prev);
		$display ("     Real value = %b", z_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_z_exp[1] = z_expected_prev[1];
	end
	if (
		( z_expected_prev[2] !== 1'bx ) && ( z_prev[2] !== z_expected_prev[2] )
		&& ((z_expected_prev[2] !== last_z_exp[2]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port z[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", z_expected_prev);
		$display ("     Real value = %b", z_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_z_exp[2] = z_expected_prev[2];
	end
	if (
		( z_expected_prev[3] !== 1'bx ) && ( z_prev[3] !== z_expected_prev[3] )
		&& ((z_expected_prev[3] !== last_z_exp[3]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port z[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", z_expected_prev);
		$display ("     Real value = %b", z_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_z_exp[3] = z_expected_prev[3];
	end
	if (
		( z_expected_prev[4] !== 1'bx ) && ( z_prev[4] !== z_expected_prev[4] )
		&& ((z_expected_prev[4] !== last_z_exp[4]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port z[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", z_expected_prev);
		$display ("     Real value = %b", z_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_z_exp[4] = z_expected_prev[4];
	end
	if (
		( z_expected_prev[5] !== 1'bx ) && ( z_prev[5] !== z_expected_prev[5] )
		&& ((z_expected_prev[5] !== last_z_exp[5]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port z[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", z_expected_prev);
		$display ("     Real value = %b", z_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_z_exp[5] = z_expected_prev[5];
	end
	if (
		( z_expected_prev[6] !== 1'bx ) && ( z_prev[6] !== z_expected_prev[6] )
		&& ((z_expected_prev[6] !== last_z_exp[6]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port z[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", z_expected_prev);
		$display ("     Real value = %b", z_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_z_exp[6] = z_expected_prev[6];
	end
	if (
		( z_expected_prev[7] !== 1'bx ) && ( z_prev[7] !== z_expected_prev[7] )
		&& ((z_expected_prev[7] !== last_z_exp[7]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port z[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", z_expected_prev);
		$display ("     Real value = %b", z_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_z_exp[7] = z_expected_prev[7];
	end

	trigger <= ~trigger;
end
initial 

begin 
$timeformat(-12,3," ps",6);
#1000000;
if (nummismatches > 0)
	$display ("%d mismatched vectors : Simulation failed !",nummismatches);
else
	$display ("Simulation passed !");
$finish;
end 
endmodule

module Block1_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk;
reg [2:0] mode;
reg reset;
reg start;
// wires                                               
wire enable;
wire [7:0] rez;
wire [3:0] x;
wire [3:0] y;
wire [7:0] z;

wire sampler;                             

// assign statements (if any)                          
Block1 i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.enable(enable),
	.mode(mode),
	.reset(reset),
	.rez(rez),
	.start(start),
	.x(x),
	.y(y),
	.z(z)
);

// clk
always
begin
	clk = 1'b0;
	clk = #5000 1'b1;
	#5000;
end 
// mode[ 2 ]
initial
begin
	mode[2] = 1'b0;
end 
// mode[ 1 ]
initial
begin
	mode[1] = 1'b1;
end 
// mode[ 0 ]
initial
begin
	mode[0] = 1'b0;
end 

// reset
initial
begin
	reset = 1'b0;
end 

// start
initial
begin
	start = 1'b1;
end 

Block1_vlg_sample_tst tb_sample (
	.clk(clk),
	.mode(mode),
	.reset(reset),
	.start(start),
	.sampler_tx(sampler)
);

Block1_vlg_check_tst tb_out(
	.enable(enable),
	.rez(rez),
	.x(x),
	.y(y),
	.z(z),
	.sampler_rx(sampler)
);
endmodule

