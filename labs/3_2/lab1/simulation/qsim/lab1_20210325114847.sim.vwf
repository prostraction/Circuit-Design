/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2019  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2700.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("C")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("R")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("S")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Q1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("QQ")
{
	MEMBERS = "Q1", "Q2", "Q3", "Q4", "Q5", "Q6";
}

TRANSITION_LIST("C")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("R")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 810.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 790.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 850.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 200.0;
		}
	}
}

TRANSITION_LIST("S")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 830.0;
			LEVEL 1 FOR 800.0;
			LEVEL 0 FOR 860.0;
			LEVEL 1 FOR 210.0;
		}
	}
}

TRANSITION_LIST("Q1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.481;
			LEVEL 0 FOR 31.936;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 39.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 18.66;
			LEVEL 0 FOR 21.34;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 39.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 19.248;
			LEVEL 1 FOR 20.752;
			LEVEL 0 FOR 1.831;
		}
	}
}

TRANSITION_LIST("Q2")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.74;
			LEVEL 0 FOR 32.596;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 80.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 37.697;
			LEVEL 0 FOR 22.303;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 37.697;
			LEVEL 0 FOR 42.303;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 39.785;
			LEVEL 0 FOR 40.215;
			LEVEL 1 FOR 2.664;
		}
	}
}

TRANSITION_LIST("Q3")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.047;
			LEVEL 0 FOR 32.616;
			LEVEL 1 FOR 79.887;
			LEVEL 0 FOR 80.113;
			LEVEL 1 FOR 79.887;
			LEVEL 0 FOR 80.113;
			LEVEL 1 FOR 79.887;
			LEVEL 0 FOR 80.113;
			LEVEL 1 FOR 79.887;
			LEVEL 0 FOR 80.113;
			LEVEL 1 FOR 79.887;
			LEVEL 0 FOR 160.113;
			LEVEL 1 FOR 79.887;
			LEVEL 0 FOR 80.113;
			LEVEL 1 FOR 79.887;
			LEVEL 0 FOR 80.113;
			LEVEL 1 FOR 79.887;
			LEVEL 0 FOR 80.113;
			LEVEL 1 FOR 79.887;
			LEVEL 0 FOR 80.113;
			LEVEL 1 FOR 77.792;
			LEVEL 0 FOR 22.208;
			LEVEL 1 FOR 79.887;
			LEVEL 0 FOR 80.113;
			LEVEL 1 FOR 79.887;
			LEVEL 0 FOR 80.113;
			LEVEL 1 FOR 79.887;
			LEVEL 0 FOR 80.113;
			LEVEL 1 FOR 79.887;
			LEVEL 0 FOR 80.113;
			LEVEL 1 FOR 79.887;
			LEVEL 0 FOR 80.113;
			LEVEL 1 FOR 37.792;
			LEVEL 0 FOR 82.208;
			LEVEL 1 FOR 79.887;
			LEVEL 0 FOR 42.45;
		}
	}
}

TRANSITION_LIST("Q4")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.119;
			LEVEL 0 FOR 195.84;
			LEVEL 1 FOR 157.532;
			LEVEL 0 FOR 2.979;
			LEVEL 1 FOR 157.021;
			LEVEL 0 FOR 2.979;
			LEVEL 1 FOR 157.021;
			LEVEL 0 FOR 2.979;
			LEVEL 1 FOR 152.954;
			LEVEL 0 FOR 166.38;
			LEVEL 1 FOR 157.531;
			LEVEL 0 FOR 2.979;
			LEVEL 1 FOR 157.021;
			LEVEL 0 FOR 2.979;
			LEVEL 1 FOR 157.021;
			LEVEL 0 FOR 342.624;
			LEVEL 1 FOR 157.532;
			LEVEL 0 FOR 2.979;
			LEVEL 1 FOR 157.021;
			LEVEL 0 FOR 2.979;
			LEVEL 1 FOR 157.021;
			LEVEL 0 FOR 2.979;
			LEVEL 1 FOR 157.021;
			LEVEL 0 FOR 2.979;
			LEVEL 1 FOR 34.245;
			LEVEL 0 FOR 165.089;
			LEVEL 1 FOR 38.196;
		}
	}
}

TRANSITION_LIST("Q5")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.729;
			LEVEL 0 FOR 193.78;
			LEVEL 1 FOR 636.816;
			LEVEL 0 FOR 323.029;
			LEVEL 1 FOR 159.808;
			LEVEL 0 FOR 160.192;
			LEVEL 1 FOR 156.971;
			LEVEL 0 FOR 183.184;
			LEVEL 1 FOR 676.67;
			LEVEL 0 FOR 201.821;
		}
	}
}

TRANSITION_LIST("Q6")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.435;
			LEVEL 0 FOR 35.092;
			LEVEL 1 FOR 159.885;
			LEVEL 0 FOR 1119.961;
			LEVEL 1 FOR 315.658;
			LEVEL 0 FOR 24.496;
			LEVEL 1 FOR 159.885;
			LEVEL 0 FOR 880.588;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "C";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "S";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "QQ";
	EXPAND_STATUS = EXPANDED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "Q6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Q5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Q4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Q3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Q2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Q1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
