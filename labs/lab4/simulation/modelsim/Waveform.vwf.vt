// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "12/19/2020 22:33:19"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          lab4
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module lab4_vlg_vec_tst();
// constants                                           
// general purpose registers
reg b1;
reg b2;
reg b3;
reg C;
reg Dp;
reg y1;
reg y2;
// wires                                               
wire q1;
wire q2;
wire q3;

// assign statements (if any)                          
lab4 i1 (
// port map - connection between master ports and signals/registers   
	.b1(b1),
	.b2(b2),
	.b3(b3),
	.C(C),
	.Dp(Dp),
	.q1(q1),
	.q2(q2),
	.q3(q3),
	.y1(y1),
	.y2(y2)
);
initial 
begin 
#1000000 $stop;
end 

// y2
initial
begin
	y2 = 1'b1;
	y2 = #240000 1'b0;
	y2 = #240000 1'b1;
	y2 = #240000 1'b0;
end 

// y1
initial
begin
	y1 = 1'b1;
	y1 = #480000 1'b0;
end 

// Dp
initial
begin
	Dp = 1'b0;
	Dp = #860000 1'b1;
end 

// C
initial
begin
	C = 1'b0;
	C = #10000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
end 

// b3
initial
begin
	b3 = 1'b0;
	b3 = #360000 1'b1;
	b3 = #240000 1'b0;
end 

// b2
initial
begin
	b2 = 1'b0;
	b2 = #300000 1'b1;
	b2 = #60000 1'b0;
	b2 = #60000 1'b1;
	b2 = #120000 1'b0;
	b2 = #60000 1'b1;
	b2 = #60000 1'b0;
end 

// b1
initial
begin
	b1 = 1'b0;
	b1 = #270000 1'b1;
	b1 = #30000 1'b0;
	b1 = #30000 1'b1;
	b1 = #30000 1'b0;
	b1 = #30000 1'b1;
	b1 = #30000 1'b0;
	b1 = #30000 1'b1;
	b1 = #60000 1'b0;
	b1 = #30000 1'b1;
	b1 = #30000 1'b0;
	b1 = #30000 1'b1;
	b1 = #30000 1'b0;
	b1 = #30000 1'b1;
	b1 = #30000 1'b0;
end 
endmodule

